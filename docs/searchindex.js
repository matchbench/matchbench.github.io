Search.setIndex({"docnames": ["index", "matchbench", "matchbench.dataset", "matchbench.evaluator", "matchbench.model", "matchbench.model.column_type_annotation", "matchbench.model.entity_alignment", "matchbench.model.entity_matching", "matchbench.model.schema_matching", "matchbench.pair_gen", "matchbench.trainer", "matchbench.utils", "md_file/DeveloperGuides", "md_file/GettingStarted", "md_file/Introduction", "md_file/UserGuides", "modules"], "filenames": ["index.rst", "matchbench.rst", "matchbench.dataset.rst", "matchbench.evaluator.rst", "matchbench.model.rst", "matchbench.model.column_type_annotation.rst", "matchbench.model.entity_alignment.rst", "matchbench.model.entity_matching.rst", "matchbench.model.schema_matching.rst", "matchbench.pair_gen.rst", "matchbench.trainer.rst", "matchbench.utils.rst", "md_file\\DeveloperGuides.md", "md_file\\GettingStarted.md", "md_file\\Introduction.md", "md_file\\UserGuides.md", "modules.rst"], "titles": ["Welcome to fmh\u2019s documentation!", "matchbench package", "matchbench.dataset package", "matchbench.evaluator package", "matchbench.model package", "matchbench.model.column_type_annotation package", "matchbench.model.entity_alignment package", "matchbench.model.entity_matching package", "matchbench.model.schema_matching package", "matchbench.pair_gen package", "matchbench.trainer package", "matchbench.utils package", "Developer Guides", "Getting Started", "Introduction", "User Guides", "matchbench"], "terms": {"index": [0, 4, 5, 6, 7], "modul": [0, 14, 16], "search": 0, "page": 0, "dataset": [0, 1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16], "submodul": [1, 12, 16], "load": [1, 4, 6, 7, 12, 16], "list_dataset": [1, 2], "load_dataset": [1, 2], "evalu": [0, 1, 6, 7, 12, 14, 16], "base_evalu": [1, 16], "ctaevalu": [1, 3], "eaevalu": [1, 3], "emevalu": [1, 3], "smevalu": [1, 3], "metric": [1, 4, 12, 16], "csls_cal": [1, 3], "batch_mat_mm": [1, 3], "batch_topk": [1, 3], "cos_sim_mat_gener": [1, 3], "hit": [1, 3, 4, 6, 13], "model": [0, 1, 3, 9, 10, 11, 12, 13, 16], "column_type_annot": [1, 4], "doduo": [1, 4], "sato": [1, 4], "sherlock": [1, 4], "entity_align": [1, 4], "dual_amn": [1, 4], "largeea": [1, 4], "bertint": [1, 4, 13], "kecg": [1, 4], "lightea": [1, 4], "rrea": [1, 4, 12, 13], "sdea": [1, 4], "seu": [1, 4], "entity_match": [1, 4], "deepmatch": [1, 4], "ditto": [1, 4], "jointbert": [1, 4], "robem": [1, 4], "rotom": [1, 4, 10], "schema_match": [1, 4], "embdi": [1, 4], "base_model": [1, 6, 16], "ctamodel": [1, 4, 5], "calculate_loss": [1, 4, 6, 7], "compute_metr": [1, 4, 6], "load_source_target": [1, 4, 6, 7, 8, 12], "train": [1, 2, 4, 5, 6, 7, 8, 10, 12, 14], "eamodel": [1, 4, 6], "compute_metric_stage_2": [1, 4, 6], "get_emb": [1, 4, 6], "get_emb_r": [1, 4], "predict": [1, 4, 5, 6, 7, 8], "predict_stage_2": [1, 4, 6], "emmodel": [1, 4, 7], "calculate_thresold": [1, 4], "get_sent": [1, 4], "generalmodel": [1, 4], "encod": [1, 4, 5, 6, 7, 9, 11], "forward": [1, 4, 5, 6, 7], "match": [1, 4, 5, 7, 8, 14], "prepare_dataload": [1, 4, 5, 6, 7], "run_step": [1, 4, 5, 6, 7], "serial": [1, 4, 5, 6, 7], "smmodel": [1, 4, 8], "f1_score_multilabel": [1, 4], "pair_gen": [1, 16], "blocker": [1, 16], "data_augment": [1, 16], "augment": [1, 4, 7, 9, 10], "augment_s": [1, 4, 7, 9], "sample_posit": [1, 9], "sample_span": [1, 9], "neg_sampl": [1, 16], "negativesampl": [1, 9], "generate_train_tup": [1, 9], "get_candidate_dict": [1, 9], "get_dataload": [1, 9], "trainer": [1, 12, 16], "base_train": [1, 12, 16], "embeddingtrain": [1, 10], "trainingcontain": [1, 10], "twostagetrain": [1, 10], "warmuptrain": [1, 10], "auto_mixda": [1, 10], "sharpen": [1, 10], "train_baseline_epoch": [1, 10], "training_argu": [1, 16], "trainingargu": [1, 10], "aug_in_batch": [1, 10], "clip_grad": [1, 10], "dataset_nam": [1, 10], "devic": [1, 3, 4, 5, 6, 7, 9, 10, 11], "eval_epoch": [1, 10], "fp": [1, 10], "log_step": [1, 10], "lr_schedul": [1, 10], "mid_file_dir": [1, 3, 6, 10], "save": [1, 6, 8, 10, 11], "save_epoch": [1, 10], "test_batch_s": [1, 3, 10], "train_batch_s": [1, 9, 10], "train_batch_size_after_negsamp": [1, 10], "use_dm_optim": [1, 10], "use_optimizer_grouped_paramet": [1, 10], "twostagetrainingargu": [1, 10], "eval_epoch_2": [1, 10], "first_stage_model_path": [1, 10], "learning_rate_2": [1, 10], "num_train_epochs_2": [1, 10], "test_batch_size_2": [1, 10], "train_batch_size_2": [1, 10], "train_batch_size_after_negsamp_2": [1, 10], "weight_decay_2": [1, 10], "logging_dir": [1, 10], "output_dir": [1, 3, 10], "util": [1, 4, 6, 7, 12, 16], "column_featur": [1, 16], "convert_string_lists_to_list": [1, 11], "extract_bag_of_characters_featur": [1, 11], "extract_bag_of_words_featur": [1, 11], "extract_topic_featur": [1, 11], "extract_word_embeddings_featur": [1, 11], "infer_paragraph_embeddings_featur": [1, 11], "process_col": [1, 11], "dto": [1, 16], "make_fil": [1, 11], "readobj": [1, 11], "save_arrai": [1, 11], "save_map": [1, 11], "saveobj": [1, 11], "to_json": [1, 11], "emb_load": [1, 16], "bert": [1, 5, 6, 7, 11], "bert_encod": [1, 11], "pooled_bert_encod": [1, 11], "pooled_encode_batch": [1, 11], "embeddingload": [1, 11], "tr_model": [1, 11], "get_embed_list": [1, 11], "get_token": [1, 4, 7, 11], "pretrained_model": [1, 11], "average_embeds_over_word": [1, 11], "minus_mask": [1, 11], "eval": [1, 16], "bi_csls_matrix": [1, 11], "csls_impl": [1, 11], "evaluate_emb": [1, 11], "evaluate_sim_matrix": [1, 11], "get_cos_sim": [1, 11], "get_csls_sim": [1, 11], "get_hit_k": [1, 11], "get_mrr": [1, 11], "get_topk_sim": [1, 11], "sparse_acc": [1, 11], "sparse_top_k": [1, 11], "truncated_mrr": [1, 11], "file_tool": [1, 16], "att_file_mak": [1, 11], "fuse": [1, 16], "naive_sim_fus": [1, 11], "subscrib": [1, 11], "load_model": [1, 11], "save_model": [1, 11], "set_se": [1, 11], "nxmeti": [1, 16], "partit": [1, 16], "sampler": [1, 4, 7, 16], "text_sim": [1, 16], "approximate_sim": [1, 11], "calc_topk_sim": [1, 11], "get_bert_maxpooling_emb": [1, 11], "get_ent_token_info": [1, 11], "lazy_topk": [1, 11], "makeset": [1, 11], "matrix_sinkhorn": [1, 11], "minhash_select_pair": [1, 11], "sinkhorn_process": [1, 11], "sparse_semantic_sim": [1, 11], "sparse_string_sim": [1, 11], "token_level_similar": [1, 11], "union": [1, 7, 10, 11], "text_util": [1, 16], "enttokeninfo": [1, 11], "e2w": [1, 11], "emb": [1, 3, 11], "ent_cnt": [1, 11], "ent": [1, 6, 11], "filter_token": [1, 11], "get_tf_idf": [1, 11], "static_high_freq_word": [1, 11], "static_punc_token": [1, 11], "w2e": [1, 11], "word_cnt": [1, 11], "word": [1, 4, 5, 6, 7, 11], "cpm_embed": [1, 11], "edit_dist_of": [1, 11], "embed_word2ent": [1, 11], "faiss_search_impl": [1, 11], "gen_mean": [1, 11], "get_batch_sim": [1, 11], "get_count": [1, 11], "get_fasttext_aligned_vector": [1, 11], "get_name_feature_map": [1, 11], "get_punctu": [1, 11], "global_level_semantic_sim": [1, 11], "normalize_vector": [1, 11], "pairwise_edit_dist": [1, 11], "reduc": [1, 11], "remove_prefix_to_list": [1, 11], "remove_punc": [1, 11], "selected_edit_dist": [1, 11], "token": [1, 4, 5, 6, 7, 9, 11], "add_cnt_for": [1, 11], "add_log": [1, 11], "appli": [1, 5, 6, 9, 11, 12], "apply_on_spars": [1, 11], "argprint": [1, 11], "batch_spspmm": [1, 11], "cosine_dist": [1, 11], "cosine_sim": [1, 11], "dense_to_spars": [1, 11], "dict_values_to_tensor": [1, 11], "filter_which": [1, 11], "get_iv": [1, 11], "has_kei": [1, 11], "ind2spars": [1, 11], "lst_argmax": [1, 11], "masked_minmax": [1, 11], "matrix_argmax": [1, 11], "matrix_argmin": [1, 11], "minmax": [1, 11], "mp2list": [1, 11], "norm_emb": [1, 11], "norm_process": [1, 11], "orthogonal_project": [1, 11], "print_siz": [1, 11], "procrust": [1, 11], "random_split": [1, 11], "rdpm": [1, 11], "rebuild_with_indic": [1, 11], "remain_topk_sim": [1, 11], "resize_spars": [1, 11], "save_similarity_matrix": [1, 11], "save_vector": [1, 11], "scatter_op": [1, 11], "seperate_index_typ": [1, 11], "sparse_argmax": [1, 11], "sparse_argmin": [1, 11], "sparse_dense_element_wise_op": [1, 11], "sparse_max": [1, 11], "sparse_min": [1, 11], "sparse_minmax": [1, 11], "sparse_softmax": [1, 11], "split_sp": [1, 11], "spmm": [1, 11], "spmm_d": [1, 11], "spmm_sd": [1, 11], "spspmm": [1, 11], "to_dens": [1, 11], "to_tensor": [1, 11], "to_torch_spars": [1, 11], "topk2spmat": [1, 11], "update_time_log": [1, 11], "view2": [1, 11], "view3": [1, 11], "view_back": [1, 11], "z_score": [1, 11], "todo": 2, "list": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "all": [2, 5, 6, 7, 8, 9, 10, 12, 13], "list_of_dataset": 2, "local_dir": 2, "none": [2, 3, 4, 5, 6, 7, 8, 10, 11], "has_pair": 2, "true": [2, 4, 5, 6, 7, 8, 9, 10, 11], "from": [2, 4, 6, 7, 11], "onlin": 2, "huggingfac": [2, 7], "repo": 2, "local": [2, 6, 7], "director": [2, 6], "paramet": [2, 4, 5, 6, 7, 8, 9, 10, 11, 13], "str": [2, 4, 5, 6, 7, 8, 9, 10, 11], "The": [2, 4, 5, 6, 7, 8, 9, 10, 12, 14], "": [2, 6, 7, 8, 11, 12, 14], "dict": [2, 5, 6, 11], "option": [2, 4, 5, 6, 7, 9, 10], "default": [2, 4, 6, 7, 8, 9, 10], "path": [2, 6, 7, 8, 11], "where": [2, 6, 7], "store": [2, 6, 7, 10], "bool": [2, 4, 5, 6, 7, 8, 10], "If": [2, 6, 7, 10, 12, 13], "ha": [2, 6, 12], "ground": 2, "truth": 2, "data": [2, 4, 5, 6, 7, 8, 9, 10, 11, 14], "pair": [2, 4, 5, 6, 7, 9, 12, 13], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10], "input": [2, 6, 7, 9, 10, 11], "onli": [2, 5, 6, 7], "one": [2, 6, 7, 10], "sourc": [2, 4, 6, 7, 8, 12, 13, 14], "target": [2, 4, 6, 7, 8, 12], "tupl": [2, 6, 7, 10, 11], "type": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14], "class": [3, 4, 5, 6, 7, 8, 9, 10, 11], "128": [3, 6, 7, 9, 10, 11], "result": [3, 4, 6, 7, 8, 12], "cuda": [3, 4, 6, 7, 10, 11], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "test_dataset": 3, "train_dataset": [3, 10], "split": [3, 4, 5, 6, 7, 10, 11], "valid": [3, 6, 7, 10], "stage": [3, 4, 6], "1": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13], "output_fil": 3, "test": [3, 4, 6, 7, 12, 13], "object": [3, 6, 7, 8, 9, 10, 11], "ground_truth": [3, 4], "sourcevec": 3, "targetvec": 3, "batch_siz": [3, 4, 5, 6, 7, 11, 13], "1024": [3, 6, 11, 13], "topk": [3, 11], "50": [3, 5, 6, 11, 13], "mat1": 3, "mat2": 3, "b": [3, 6, 7, 11], "mat": 3, "topn": 3, "largest": 3, "fals": [3, 5, 6, 7, 8, 9, 10, 11], "emb1": [3, 11], "emb2": [3, 11], "cosin": [3, 7], "similar": [3, 6, 7, 9], "matrix": [3, 6, 11], "embedding1": 3, "embedding2": 3, "batch": [3, 4, 5, 6, 7, 10], "entiti": [3, 4, 6, 7, 11, 13, 14], "id": [3, 4, 6, 7, 11], "embed": [3, 4, 5, 6, 8, 11], "vector": [3, 4, 5, 6, 7, 8], "index_mat": 3, "label_map": [4, 5], "crf": [4, 5], "decod": [4, 5], "init_transit": [4, 5], "reset_paramet": [4, 5], "nr_graphattent": [4, 6], "basic_bert_unit_model": [4, 6], "chuliyixia": [4, 6], "matcher": [4, 5, 6], "negative_sampl": [4, 6], "mlp": [4, 6], "pairwisedataset": [4, 6], "relationaldataload": [4, 6], "train_pair_index_gen": [4, 6], "all_entity_pairs_gen": [4, 6], "attributevalue_emb_gen": [4, 6], "attributeview_interaction_f_gen": [4, 6], "batch_dual_aggregation_feature_gen": [4, 6], "candidate_gener": [4, 6], "clean_attribute_data": [4, 6], "desornameview_interaction_f_gen": [4, 6], "dump_other_data": [4, 6], "ent2attributevalues_gen": [4, 6], "get_attributevalue_embed": [4, 6], "get_attributeview_interaction_featur": [4, 6], "get_attribute_value_typ": [4, 6], "get_entity_embed": [4, 6], "get_neighview_and_desview_interaction_featur": [4, 6], "get_tokens_of_valu": [4, 6], "kernel_mu": [4, 6], "kernel_sigma": [4, 6], "neigh_ent_dict_gen": [4, 6], "neighborview_interaction_f_gen": [4, 6], "padding_to_longest": [4, 6], "read_att_data": [4, 6], "read_attribute_data": [4, 6], "remove_one_to_n_att_data_by_threshold": [4, 6], "sort_a": [4, 6], "test_read_emb": [4, 6], "gat": [4, 6], "multiheadgraphattent": [4, 6], "specialspmm": [4, 6], "specialspmmfunct": [4, 6], "backward": [4, 6], "batch_sparse_matmul": [4, 6], "get_featur": [4, 6], "random_project": [4, 6], "segment_sum": [4, 6], "sparse_sinkhorn_sim": [4, 6], "load_aligned_pair": [4, 6], "load_graph": [4, 6], "load_name_featur": [4, 6], "plm_path": [4, 6, 7], "basic_input_dim": [4, 6], "basic_output_dim": [4, 6], "dropout": [4, 5, 6], "bert_model": [4, 6], "bertdataload": [4, 6], "line_to_featur": [4, 6], "load_data": [4, 6], "load_freq": [4, 6], "load_saved_data": [4, 6], "run": [4, 6, 7, 13], "save_data": [4, 6], "save_token_freq": [4, 6], "dbppreprocess": [4, 6], "outputs_csv": [4, 6], "outputs_python": [4, 6], "outputs_tab": [4, 6], "gruattnnet": [4, 6], "attn_net_with_w": [4, 6], "build_model": [4, 6], "highwai": [4, 6, 7], "init_linear": [4, 6], "kbstore": [4, 6], "add_fact": [4, 6], "add_item": [4, 6], "add_to_block": [4, 6], "add_tupl": [4, 6], "add_word_level_block": [4, 6], "calculate_func": [4, 6], "get_or_add_item": [4, 6], "get_property_table_lin": [4, 6], "load_ent": [4, 6], "load_fact": [4, 6], "load_kb": [4, 6], "load_kb_from_sav": [4, 6], "load_liter": [4, 6], "load_properti": [4, 6], "load_rel": [4, 6], "save_base_info": [4, 6], "save_fact": [4, 6], "save_property_t": [4, 6], "save_seq_form": [4, 6], "oeafiletyp": [4, 6], "attr": [4, 6, 7], "rel": [4, 6], "ttl_full": [4, 6], "relationdataset": [4, 6], "get_matrix": [4, 6], "get_neighbor_matrix": [4, 6], "relationmodel": [4, 6], "rnn": [4, 6], "combin": [4, 6], "ent_embedding1": [4, 6], "ent_embedding2": [4, 6], "case_studi": [4, 6], "get_ent_embed": [4, 6], "get_neighbors_batch": [4, 6], "get_rel_emb": [4, 6], "pos_neg_count": [4, 6], "relationvaliddataset": [4, 6], "if_neg_sample_2": [4, 6], "all_embed1": [4, 6], "all_embed2": [4, 6], "entity_mod": [4, 6], "class_name_str": [4, 6], "get_tensor_data": [4, 6], "load_link": [4, 6], "load_links_sep": [4, 6], "oea_truth_lin": [4, 6], "reduce_token": [4, 6], "reduce_tokens_with_freq": [4, 6], "compress_uri": [4, 6], "load_list": [4, 6], "load_list_p": [4, 6], "oea_attr_lin": [4, 6], "oea_rel_lin": [4, 6], "save_dict_p": [4, 6], "save_list": [4, 6], "save_list_p": [4, 6], "stripsquarebracket": [4, 6], "strip_square_bracket": [4, 6], "text_to_word_sequ": [4, 6], "ttl_no_compress_lin": [4, 6], "cal_sim": [4, 6], "load_tripl": [4, 6], "dkinjector": [4, 7], "initi": [4, 6, 7, 13], "transform": [4, 6, 7, 10, 11], "transform_fil": [4, 7], "dittodataload": [4, 7], "pad": [4, 6, 7], "generaldkinjector": [4, 7], "productdkinjector": [4, 7], "summar": [4, 7], "config": [4, 7], "build_index": [4, 7], "get_len": [4, 7], "bcewithlogitsloss": [4, 7], "bertdataloaderjoint": [4, 7], "drop_last": [4, 7], "num_work": [4, 7], "pin_memori": [4, 7], "prefetch_factor": [4, 7], "split_valid": [4, 7], "timeout": [4, 7], "datacollatorwithpad": [4, 7], "mask_token": [4, 7], "max_length": [4, 5, 6, 7], "mlm": [4, 7, 11], "mlm_probabl": [4, 7], "pad_to_multiple_of": [4, 7], "calc_weights_label": [4, 7], "pair_gener": [4, 7], "jointbertprep": [4, 7], "assign_clusterid": [4, 7], "cluster_id_process": [4, 7], "get_cluster_id": [4, 7], "get_encoder_deepmatch": [4, 7], "process_to_bert": [4, 7], "aslsinglelabel": [4, 7], "augmod": [4, 7], "random_del": [4, 7], "remove_char_less_than": [4, 7], "remove_stop_word": [4, 7], "rob_al": [4, 7], "rob_sfl": [4, 7], "rob_swap": [4, 7], "basicaug": [4, 7], "emdataset": [4, 7], "input_seri": [4, 7], "context_forward": [4, 7], "context_similarity_lay": [4, 7], "get_lm": [4, 7], "get_lm_class": [4, 7], "get_lm_dim": [4, 7], "has_type_token": [4, 7], "reset_weight": [4, 7], "resize_embed": [4, 7], "robertaclassificationhead": [4, 7], "robustaugment": [4, 7], "simpleclassifi": [4, 7], "cosine_similar": [4, 7], "set_to_devic": [4, 7], "edg": [4, 8], "edgelist": [4, 8], "convert_cell_valu": [4, 8], "convert_to_dict": [4, 8], "convert_to_numer": [4, 8], "evaluate_frequ": [4, 8], "f_no_smooth": [4, 8], "find_intersection_flatten": [4, 8], "get_edgelist": [4, 8], "get_prefix": [4, 8], "inverse_freq": [4, 8], "inverse_smooth": [4, 8], "log_freq": [4, 8], "prepare_split": [4, 8], "smooth_exp": [4, 8], "smooth_freq": [4, 8], "graph": [4, 6, 8, 11], "add_edg": [4, 8], "add_similar": [4, 8], "compute_n_sent": [4, 8], "get_graph": [4, 8], "get_node_list": [4, 8], "produce_intersect": [4, 8], "node": [4, 6, 8], "add_neighbor": [4, 8], "get_random_neighbor": [4, 8], "get_random_replac": [4, 8], "get_random_start": [4, 8], "normalize_neighbor": [4, 8], "set_frequ": [4, 8], "randomwalk": [4, 8], "get_both_walk": [4, 8], "get_reversed_walk": [4, 8], "get_walk": [4, 8], "replace_numeric_valu": [4, 8], "replace_string_valu": [4, 8], "multi_label": [4, 5], "loss_funct": [4, 5], "logit": [4, 5, 10], "label": [4, 6, 7, 9, 10, 11], "arg": [4, 5, 10, 11], "loss": [4, 5, 6, 7, 10, 13], "dataset_src": [4, 6, 8], "dataset_tgt": [4, 6, 8], "kwarg": [4, 7, 8, 11], "align": [4, 6, 11, 13, 14], "calcul": [4, 6, 7], "param": [4, 5, 6, 7, 8, 9, 10, 11], "top": [4, 6], "each": [4, 5, 6, 8], "torch": [4, 5, 6, 7, 10, 11], "tensor": [4, 5, 6, 7, 10, 11], "float": [4, 5, 6, 7, 8, 10, 11], "loader": [4, 6, 7], "convert": [4, 6, 8], "after": [4, 6, 7, 12, 13], "dataload": [4, 6, 7], "cpu": [4, 5, 6, 7, 8, 11], "output": [4, 5, 6, 7, 13], "rel_embed": [4, 6], "all_emb": [4, 6, 9], "mode": [4, 6, 7], "prepar": [4, 6, 7, 8], "arrow_dataset": [4, 6, 7, 8, 10], "train_dataload": [4, 6], "closest": [4, 6], "set": [4, 6, 7, 11, 12], "basic": [4, 6], "all_i": 4, "all_prob": 4, "threshold": [4, 6, 7, 11], "probabl": [4, 6, 7, 10], "greater": 4, "than": 4, "threshol": 4, "int": [4, 5, 6, 7, 8, 10, 11], "doubl": [4, 7], "pred": [4, 6], "comput": [4, 5, 6, 7, 8], "em": 4, "f1": 4, "score": [4, 5, 6, 10], "tabl": [4, 5], "get": [0, 4, 6, 7], "sentenc": [4, 7, 8, 9, 11, 12], "need": [4, 5, 6, 7, 8, 11], "process": [4, 6, 7, 10, 12], "data_src": [4, 7, 8], "data_tgt": [4, 7, 8], "dataset_dict": [4, 7], "datasetdict": [4, 7], "pytorchmodelhubmixin": 4, "plm": [4, 5, 6, 7], "cl": 4, "trainabl": 4, "pretrain": [4, 5, 6, 7], "untrain": 4, "self": [4, 5, 7], "featur": [4, 5, 6, 7, 12], "pwe": [4, 5], "32": [4, 6, 7, 10], "match_result": 4, "true_list": 4, "pred_list": 4, "8": [5, 7, 10, 11, 13], "label_num": 5, "78": 5, "hidden_dropout_prob": 5, "0": [5, 6, 7, 8, 9, 10, 11, 12, 13], "5": [5, 7, 8, 10, 11, 13, 14], "pretrained_model_nam": 5, "uncas": [5, 6, 7, 11], "nn": [5, 6, 10, 11], "crossentropyloss": 5, "16": [5, 10, 13], "datafram": [5, 7, 11], "batch_first": 5, "emiss": 5, "mask": [5, 7], "bytetensor": 5, "find": [5, 12], "most": 5, "like": [5, 6, 13], "tag": 5, "sequenc": [5, 7, 9], "us": [5, 6, 7, 8, 12, 13], "viterbi": 5, "algorithm": [5, 14], "size": [5, 6, 7, 8, 11], "seq_length": 5, "i": [5, 6, 7, 8, 10, 11, 12, 13, 14], "otherwis": [5, 12], "contain": [5, 7, 8, 12], "best": [5, 10], "longtensor": [5, 7], "reduct": [5, 6, 7, 11], "sum": [5, 11], "condit": 5, "log": 5, "likelihood": 5, "given": [5, 6, 8, 12], "specifi": [5, 7], "mean": [5, 7, 11, 12], "token_mean": 5, "over": 5, "averag": 5, "thi": [5, 6, 7, 8, 12, 13], "have": [5, 6, 8, 13], "fixed_sherlock_param": 5, "sherlock_model": 5, "featureencoder_charactor": 5, "_featureencod": 5, "bn1": 5, "batchnorm1d": 5, "960": 5, "ep": [5, 7, 8, 11], "1e": [5, 7, 10, 11], "05": [5, 10, 11], "momentum": 5, "affin": 5, "track_running_stat": 5, "linear1": 5, "linear": [5, 10], "in_featur": 5, "out_featur": 5, "300": [5, 6, 10], "bia": [5, 6], "relu1": 5, "relu": [5, 6], "dp1": 5, "p": [5, 11], "inplac": 5, "linear2": 5, "relu2": 5, "featureencoder_word": 5, "200": [5, 6], "featureencoder_paragraph": 5, "400": 5, "featureencoder_glob": 5, "27": 5, "927": 5, "500": [5, 6, 10], "linear3": 5, "an": [5, 6, 7, 12], "iter": [5, 6, 10, 11], "typic": 5, "pass": [5, 6, 7], "optim": [5, 10], "recurs": 5, "yield": 5, "ar": [5, 6, 7, 8, 12], "direct": 5, "member": 5, "exampl": [5, 7, 9, 13], "print": [5, 7], "20l": 5, "1l": 5, "5l": 5, "10": [5, 6, 7, 8, 10, 11, 13], "process_num": 5, "4": [5, 7, 13, 14], "row_num": 5, "1000": [5, 8, 11], "word_embedding_dim": 5, "paragraph_embedding_dim": 5, "paragraph_negative_sampl": 5, "3": [5, 6, 7, 8, 9, 10, 11, 12, 13], "paragraph_train_epoch": 5, "20": [5, 14], "paragraph_min_count": 5, "2": [5, 6, 7, 9, 11, 12, 13], "embedding_dim": 5, "dropout_ratio": 5, "topic_dim": 5, "lda_batch_s": 5, "5000": [5, 11], "lad_minimum_prob": 5, "lda_long_threshold": 5, "lda_numeric_rep": 5, "directstr": 5, "max_col_count": 5, "6": [5, 13], "feature_typ": 5, "charactor": 5, "paragraph": 5, "global": 5, "triple_s": 6, "353543": 6, "node_s": 6, "39654": 6, "new_node_s": 6, "rel_siz": 6, "4224": 6, "nearest_sample_num": [6, 9], "alpha": 6, "beta": [6, 7], "gamma": 6, "depth": 6, "node_hidden": 6, "rel_hidden": 6, "dropout_r": 6, "ind_dropout_r": 6, "approach": [6, 7], "attribut": [6, 7, 8, 9, 10, 11], "gener": [6, 7, 12], "tripl": 6, "kg": 6, "relat": [6, 7], "candid": 6, "number": [6, 7, 8], "when": [6, 8, 10, 12], "negtiv": 6, "sampl": [6, 7], "architectur": [6, 7], "valu": [6, 7, 8, 11], "layer": [6, 7, 11], "dimens": [6, 7, 8, 10], "represent": 6, "function": [6, 7, 8, 12], "other": [6, 7, 8, 12], "In": [6, 10], "scenario": 6, "kei": 6, "input_id": 6, "attention_mask": 6, "numpi": 6, "arrai": [6, 8, 11], "For": [6, 10, 12, 13], "A": [6, 7, 12], "string": [6, 7, 8, 9], "indic": [6, 7, 11], "which": [6, 7, 8, 11, 12, 14], "follow": [6, 12], "middle_fil": [6, 10], "middl": 6, "file": [6, 7, 8, 13], "train_pair": 6, "whole": [6, 7, 10], "step": [6, 7, 10], "node_dim": 6, "attn_head": 6, "attn_heads_reduct": 6, "concat": [6, 7], "use_bia": 6, "unit": 6, "attent": [6, 7, 12], "head": [6, 7, 12], "wai": [6, 8], "defin": [6, 7, 8], "perform": [6, 7, 9, 10, 12], "everi": [6, 7, 10], "call": [6, 7, 12], "should": [6, 7, 12], "overridden": [6, 7], "subclass": [6, 7], "although": [6, 7], "recip": [6, 7], "within": [6, 7, 12], "instanc": [6, 7], "afterward": [6, 7], "instead": [6, 7], "sinc": [6, 7], "former": [6, 7], "take": [6, 7], "care": [6, 7], "regist": [6, 7], "hook": [6, 7], "while": [6, 7], "latter": [6, 7], "silent": [6, 7], "ignor": [6, 7, 11], "them": [6, 7], "encoder_model": 6, "languag": [6, 7], "encodermodel": [6, 7], "pretrainedmodel": [6, 7], "user": [0, 6, 7], "if_neg_sampl": 6, "max_seq_length": 6, "test_topk": 6, "768": 6, "mlp_input_dim": 6, "85": 6, "mlp_hidden_dim": 6, "11": [6, 13], "margin_1": 6, "margin_2": 6, "max": [6, 7, 11, 13], "length": [6, 7, 8, 10], "fed": 6, "get_emb_batch": 6, "marginrankingloss": 6, "pos_scor": 6, "neg_scor": 6, "four": [6, 14], "kind": 6, "postiv": 6, "pos1": 6, "pos2": 6, "neg1": 6, "neg2": 6, "final": 6, "block_load": 6, "24": [6, 9, 10], "neg": [6, 7], "describ": [6, 8, 12], "pairwis": 6, "rewrit": 6, "bertint_middle_fil": 6, "two": [6, 7, 10], "integ": 6, "de": 6, "descript": [6, 7], "can": [6, 7, 12, 13, 14], "directli": 6, "name": [6, 7, 8], "train_tup": 6, "ent2data": 6, "train_il": 6, "train_candid": 6, "entpair2f_idx": 6, "all_featur": 6, "neg_num": [6, 9], "entity_index": 6, "candidate_dict_list": 6, "ill_pair_list": 6, "l_set": 6, "attributevalu": 6, "ent_pair": 6, "value_emb_list": 6, "ent2valueid": 6, "value_pad_id": 6, "kernel_num": 6, "21": 6, "512": [6, 7, 9, 11], "view": [6, 14], "interact": 6, "dual": 6, "aggreg": 6, "between": [6, 7], "batch_sim_matrix": 6, "mu": 6, "sigma": 6, "attn_ne1": 6, "attn_ne2": 6, "ne1": 6, "ne2": 6, "k": [6, 8, 11], "ents1": 6, "ents2": 6, "ent_emb": 6, "candidate_topk": 6, "e_emb_list": 6, "train_ents1": 6, "train_ents2": 6, "test_ents1": 6, "test_ents2": 6, "entid_list": 6, "att_data": 6, "pad_valu": 6, "attribute_valu": 6, "256": [6, 7, 10], "value_typ": 6, "vaule_list": 6, "n_kernel": 6, "rel_tripl": 6, "pad_id": 6, "hop": 6, "neighbor": [6, 8], "ent_emb_list": 6, "neigh_dict": 6, "ent_pad_id": 6, "token_list": 6, "kg1_att_file_nam": 6, "kg2_att_file_nam": 6, "entity_list": 6, "entity2index": 6, "add_name_as_atttripl": 6, "entity_id": 6, "ori_keep_data": 6, "ori_remove_data": 6, "one2n_threshold": 6, "filter": 6, "nois": 6, "data_list": 6, "sort": 6, "test_il": 6, "n_unit": 6, "n_head": 6, "attn_dropout": 6, "instance_norm": 6, "diag": 6, "x": [6, 7, 8, 11], "adj": 6, "f_in": 6, "f_out": 6, "init": 6, "shape": [6, 7], "special": [6, 7], "spars": [6, 11], "region": 6, "backpropataion": 6, "static": [6, 7, 8, 11], "ctx": 6, "grad_output": 6, "formula": 6, "differenti": 6, "oper": [6, 7, 9], "It": [6, 8, 12], "must": 6, "accept": [6, 7], "context": [6, 8], "first": [6, 7, 12, 13], "argument": [6, 7], "mani": 6, "did": 6, "were": 6, "gradient": 6, "w": [6, 11], "r": 6, "t": [6, 7, 10, 11], "correspond": [6, 7, 12, 13], "retriev": 6, "dure": [6, 8], "also": [6, 8], "needs_input_grad": 6, "boolean": 6, "repres": 6, "whether": 6, "e": [6, 7, 12], "g": [6, 12], "ani": [6, 7, 8, 11, 12], "ent_dim": 6, "top_k": 6, "predict_epoch": 6, "using_name_featur": 6, "consid": 6, "translat": 6, "english": 6, "sparse_tensor": 6, "dense_tensor": 6, "save_mem": 6, "extra_featur": 6, "has_mid_fil": 6, "alreadi": [6, 7], "been": [6, 13], "implement": [6, 12, 13], "togeth": 6, "cannot": 6, "separ": [6, 7, 11], "unus": 6, "np": [6, 7, 8], "out_dim": 6, "segment_id": 6, "left": [6, 7], "right": [6, 7], "15": [6, 7, 13], "epoch": [6, 10, 13], "test_pair": 6, "file_path": 6, "ratio": [6, 7], "vector_path": 6, "level": [6, 7, 9, 12], "activ": 6, "funciton": 6, "100": [6, 7, 11], "home": 6, "wangp": 6, "main": [6, 12, 14], "pre_trained_model": 6, "multilingu": [6, 11], "mainli": [6, 12], "serv": 6, "line": [6, 7], "berttoken": [6, 7, 11], "line_solv": 6, "dataset_att": 6, "record": [6, 12], "suffix": 6, "embed_dim": 6, "hidden_dim": 6, "hidden_lay": 6, "rnn_out": 6, "rnn_hn": 6, "neighbor_mask": 6, "seq_len": [6, 7], "n_hidden": 6, "num_lay": 6, "num_direct": 6, "dim": [6, 7, 11], "in_fea": 6, "out_fea": 6, "dataset_path": 6, "includ": [6, 8, 12, 14], "properti": 6, "etc": 6, "sbj_id": 6, "pred_id": 6, "obj_id": 6, "facts_list": 6, "sbj": 6, "obj": [6, 11], "file_typ": 6, "r_name": 6, "r_id": 6, "header": 6, "enum": [6, 7], "ent2data1": 6, "ent2data2": 6, "train_tups_r": 6, "fs1": 6, "fs2": 6, "ent2embed1": 6, "ent2embed2": 6, "nm_len": 6, "pad_idx": 6, "fact": 6, "rel_count1": 6, "rel_count2": 6, "all_embed1_s": 6, "all_embed2_s": 6, "score_distance_level": 6, "margin": 6, "count": 6, "distanc": [6, 8], "pe1": 6, "pe2": 6, "bpn1": 6, "bpn2": 6, "bnn1": 6, "bnn2": 6, "bpr1": 6, "bpr2": 6, "bnr1": 6, "bnr2": 6, "batch_fact": 6, "pad_idxr": 6, "batch_neighbor": 6, "batch_rel": 6, "batch_ent": 6, "y_true": 6, "f": [6, 7, 8], "max_seq_len": 6, "second": [6, 7, 10], "all_embed1s_p": 6, "all_embed2s_p": 6, "eid2data": 6, "link_path": 6, "entity_ids1": 6, "entity_ids2": 6, "tid": 6, "max_len": [6, 7], "freq": [6, 8], "uri": 6, "dic": [6, 11], "l": 6, "text": [6, 7, 9], "_": [6, 12], "n": [6, 13], "lower": 6, "hungarian": 6, "assign": [6, 8], "either": [6, 8], "sinkhorn": 6, "both": [6, 9, 11], "triples1": 6, "triples2": 6, "revers": 6, "sim": [6, 11], "inject": 7, "domain": 7, "knowledg": 7, "entri": 7, "injector": 7, "input_fn": 7, "overwrit": 7, "tsv": 7, "exist": 7, "just": [7, 13], "cach": 7, "dk": 7, "da": 7, "drop_col": [7, 9], "pretrain_plm_path": 7, "alpha_aug": 7, "retain": 7, "high": 7, "tf": 7, "idf": 7, "mixda": [7, 10], "support": [7, 9, 14], "del": [7, 9], "swap": [7, 9], "append_col": [7, 9], "maximum": 7, "random": [7, 11], "storag": 7, "x1": [7, 11], "x2": [7, 11], "concaten": 7, "binari": [7, 11], "lm": 7, "roberta": [7, 11], "pre": 7, "merg": [7, 12], "item": [7, 11], "element": 7, "same": [7, 12], "public": 7, "busi": 7, "spaci": 7, "ner": 7, "regcon": 7, "product": 7, "mark": [7, 12], "normal": 7, "format": [7, 8, 12], "To": [7, 14], "up": [7, 10], "task_config": 7, "task": [7, 10, 14], "configur": 7, "dictionari": 7, "albert": 7, "distilbert": 7, "librari": [7, 13, 14], "build": [0, 7, 8, 12, 13], "vocabulari": 7, "vocab": 7, "sentence_piec": 7, "row": 7, "singl": 7, "highest": [7, 8], "tab": 7, "len": 7, "pos_neg_ratio": 7, "valid_fil": 7, "valid_batch_s": 7, "shuffl": [7, 9], "validation_split": 7, "tokenizer_nam": 7, "panda": 7, "intern": [7, 8], "randomsampl": 7, "permut": 7, "subprocess": 7, "t_co": 7, "rtype": [7, 8], "pretrainedtoken": 7, "pretrainedtokenizerfast": 7, "paddingstrategi": 7, "collat": 7, "dynam": 7, "receiv": [7, 8], "select": 7, "strategi": 7, "accord": [7, 8, 12], "side": 7, "among": 7, "longest": 7, "provid": [7, 12, 13, 14], "do_not_pad": 7, "No": 7, "differ": 7, "see": 7, "abov": 7, "multipl": [7, 8], "especi": 7, "enabl": 7, "core": 7, "nvidia": 7, "hardwar": 7, "capabl": 7, "7": [7, 13], "volta": 7, "80": 7, "origin": [7, 12], "weight_decai": [7, 10], "01": [7, 8, 11], "num_classes_multi": 7, "1013": 7, "num_class": 7, "freeze_bert": 7, "po": 7, "weight": [7, 8], "decai": 7, "identifi": 7, "classif": [7, 9], "freez": 7, "trainload": 7, "calc": 7, "seq": 7, "token_id": 7, "attn_mask": 7, "avoid": 7, "contibut": 7, "posit": 7, "tablea": 7, "tableb": 7, "cluster_id_dict": 7, "cluster_id_amount": 7, "cluster": 7, "left_df": 7, "right_df": 7, "cutting_func": 7, "multi_encod": 7, "gamma_po": 7, "gamma_neg": 7, "enumer": 7, "num": [7, 13], "datasrc": 7, "datatgt": 7, "sentence_s": 7, "aug_siz": 7, "relationship": 7, "robertatoken": [7, 11], "piec": 7, "left_ful": 7, "right_ful": 7, "input_s": 7, "dataprep": 7, "pretrained_lm": 7, "sent_siz": 7, "deep_classifi": 7, "loss_typ": 7, "wce": 7, "neg_weight": 7, "pos_weight": 7, "amp_scal": 7, "addsep": 7, "hi": 7, "deep": 7, "classifi": 7, "asl": 7, "non": 7, "auto": [7, 10], "mix": 7, "precis": 7, "add": [7, 12], "add_special_token": 7, "new_len": 7, "col": [7, 11], "sep_kei": 7, "sep": [7, 11], "op": [7, 9, 11], "fixed_shuffl": 7, "force_swap": 7, "attr_kei": 7, "disable_shuffl": 7, "disable_swap": 7, "hidden_s": 7, "enc": 7, "08": [7, 10, 11], "along": 7, "dfrac": 7, "x_1": 7, "cdot": 7, "x_2": 7, "vert": 7, "_2": 7, "epsilon": 7, "small": 7, "divis": 7, "zero": 7, "ast_1": 7, "d": [7, 10, 11], "ast_2": 7, "input1": 7, "randn": 7, "input2": 7, "node_from": 8, "node_to": 8, "weight_forward": 8, "weight_back": 8, "df": 8, "prefix": [8, 11], "__tn": 8, "__tt": 8, "__idx": 8, "__cid": 8, "info_fil": 8, "smoothing_method": 8, "flatten": 8, "method": [8, 11, 12], "original_valu": 8, "cell": 8, "round": 8, "intersect": 8, "uniform": 8, "node_1": 8, "node_2": 8, "weight_12": 8, "weight_21": 8, "cell_valu": 8, "frequenc": 8, "degre": 8, "higher": 8, "decreas": 8, "minimum": 8, "beyond": 8, "lowest": 8, "sentence_length": 8, "60": 8, "backtrack": 8, "repl_numb": 8, "repl_str": 8, "make": [8, 10, 12], "window_s": [8, 10], "training_algorithm": [8, 10], "learning_method": [8, 10], "worker": [8, 10], "sampling_factor": [8, 10], "walk": 8, "corpu": 8, "avail": 8, "tweak": [8, 12], "procedur": 8, "later": 8, "experiment": [8, 12], "phase": 8, "window": 8, "fasttext": 8, "word2vec": [8, 10], "skipgram": [8, 10], "cbow": 8, "mp": [8, 11], "cpu_count": 8, "sim_list": 8, "factor": 8, "rule": [8, 12], "thumb": 8, "n_sentenc": 8, "n_node": 8, "representation_factor": 8, "desir": 8, "occurr": 8, "intersecting_nod": 8, "node_class": 8, "numer": 8, "graph_nod": 8, "starting_node_nam": 8, "sentence_len": 8, "follow_replac": 8, "span": 9, "drop_token": 9, "drop_len": 9, "drop_sym": 9, "drop_sam": 9, "ins": 9, "work": [9, 12], "tfidf": 9, "span_len": 9, "neg_sample_batch_s": 9, "train_ent1": 9, "train_ent2": 9, "idlist1": 9, "idlist2": 9, "all_emb1": 9, "all_emb2": 9, "train_emb1": 9, "train_emb2": 9, "train_ent": 9, "train_emb": 9, "all_ent": 9, "new_dataset": 9, "001": 10, "valid_dataset": 10, "schedul": 10, "scaler": 10, "hyper": 10, "more": [10, 12], "detail": [10, 14], "pleas": [10, 12], "check": 10, "adamw": 10, "specif": [10, 12], "save_func": 10, "optimizer_1": 10, "optimizer_2": 10, "some": [10, 13], "ea": [10, 12, 14], "part": [10, 12], "addit": [10, 12], "adam": 10, "polici": 10, "warmup": 10, "augmentpolicynetv4": 10, "warm": 10, "get_ind": 10, "no_ssl": 10, "state": [10, 12], "distribut": 10, "closer": 10, "onehot": 10, "perfrom": 10, "overwrite_output_dir": 10, "do_train": 10, "do_ev": 10, "do_predict": 10, "evaluation_strategi": 10, "trainer_util": 10, "intervalstrategi": 10, "prediction_loss_onli": 10, "per_device_train_batch_s": 10, "per_device_eval_batch_s": 10, "per_gpu_train_batch_s": 10, "per_gpu_eval_batch_s": 10, "gradient_accumulation_step": 10, "eval_accumulation_step": 10, "learning_r": [10, 13], "5e": 10, "adam_beta1": 10, "9": [10, 13], "adam_beta2": 10, "999": 10, "adam_epsilon": 10, "max_grad_norm": 10, "num_train_epoch": 10, "max_step": 10, "lr_scheduler_typ": 10, "schedulertyp": 10, "warmup_ratio": 10, "warmup_step": 10, "factori": 10, "logging_strategi": 10, "logging_first_step": 10, "logging_step": 10, "save_strategi": 10, "save_step": 10, "save_total_limit": 10, "no_cuda": 10, "seed": [10, 11], "42": 10, "fp16": 10, "fp16_opt_level": 10, "o1": 10, "fp16_backend": 10, "fp16_full_ev": 10, "local_rank": 10, "tpu_num_cor": 10, "tpu_metrics_debug": 10, "debug": 10, "dataloader_drop_last": 10, "eval_step": 10, "dataloader_num_work": 10, "past_index": 10, "run_nam": 10, "disable_tqdm": 10, "remove_unused_column": 10, "label_nam": 10, "load_best_model_at_end": 10, "metric_for_best_model": 10, "greater_is_bett": 10, "ignore_data_skip": 10, "sharded_ddp": 10, "deepspe": 10, "label_smoothing_factor": 10, "adafactor": 10, "group_by_length": 10, "length_column_nam": 10, "report_to": 10, "ddp_find_unused_paramet": 10, "dataloader_pin_memori": 10, "skip_memory_metr": 10, "mp_paramet": 10, "As": 10, "supplement": 10, "nonetyp": 10, "0005": 10, "2048": [10, 11], "lda": 11, "long_threshold": 11, "numeric_rep": 11, "word_to_embed": 11, "num_embed": 11, "fname": 11, "arr": 11, "print_len": 11, "sort_bi": 11, "descend": 11, "utf": 11, "reverse_kv": 11, "sort_by_kei": 11, "case": 11, "pool": 11, "save_gpu_memori": 11, "xlm": 11, "modeling_bert": 11, "bertmodel": 11, "tokenization_bert": 11, "modeling_roberta": 11, "robertamodel": 11, "tokenization_roberta": 11, "1280": 11, "modeling_xlm": 11, "xlmmodel": 11, "tokenization_xlm": 11, "xlmtoken": 11, "xlm_roberta": 11, "modeling_xlm_roberta": 11, "xlmrobertamodel": 11, "dummy_sentencepiece_object": 11, "xlmrobertatoken": 11, "larg": 11, "sent_batch": 11, "get_length": 11, "bpe_vector": 11, "ndarrai": 11, "word_tokens_pair": 11, "input_len": 11, "mask_typ": 11, "sim_matrix0": 11, "sim_matrix1": 11, "return2": 11, "sim_matrix": 11, "dist0": 11, "dist1": 11, "src_emb": 11, "trg_emb": 11, "link": 11, "map": 11, "no_csl": 11, "rev": 11, "mrr": [11, 13], "sim_x2i": 11, "sim_y2x": 11, "start": [0, 11], "k_ent": 11, "match_id": 11, "src": 11, "k_list": 11, "4096": 11, "sp_sim": 11, "fail": 11, "keep_data": 11, "remove_data": 11, "keep_file_nam": 11, "remove_file_nam": 11, "c": 11, "env": 11, "conda": [11, 13], "lib": 11, "site": 11, "__init__": 11, "py": [11, 12, 13], "trg": 11, "rank": 11, "niter": 11, "keep_k": 11, "xt": 11, "lazi": 11, "ent1": 11, "ent2": 11, "encode_batch_sz": 11, "save_prefix": 11, "ei_": 11, "req": 11, "ent_list": 11, "num_perm": 11, "pred_or_m": 11, "expect": 11, "e1": 11, "minhash": 11, "e2": 11, "begin_with": 11, "redis_port": 11, "6138": 11, "m": 11, "e1info": 11, "e2info": 11, "filter_token_cnt": 11, "1000000": 11, "src_w2e": 11, "trg_w2e": 11, "src_word_x": 11, "trg_word_x": 11, "sparse_k": 11, "dense_mm": 11, "do_sinkhorn": 11, "sa": 11, "sb": 11, "hf": 11, "now": 11, "25": [11, 13], "verbos": 11, "filter_ep": 11, "word_list": 11, "punc": 11, "ent2word": 11, "cpm_type": 11, "en": [11, 12, 13], "fr": [11, 13], "sent0": 11, "sent1": 11, "word_emb": 11, "emb_q": 11, "emb_id": 11, "emb_siz": 11, "shift": 11, "search_batch_sz": 11, "50000": 11, "gpu": 11, "val": 11, "lang": 11, "sent": 11, "embedding_load": 11, "use_fasttext": 11, "bert_token": 11, "index_batch_sz": 11, "500000": 11, "norm": 11, "center": 11, "entity_dict": 11, "http": [11, 12, 13], "z": 11, "100000": 11, "begin": 11, "old_id": 11, "cur_id": 11, "v": 11, "func": 11, "filter_softmax": 11, "sp": 11, "size2": 11, "dtype": 11, "float32": 11, "lst": 11, "min": 11, "masked_v": 11, "in_plac": 11, "assoc": 11, "link0": 11, "link1": 11, "y": 11, "total": 11, "15000": 11, "cnt_test": 11, "9000": 11, "cnt_train": 11, "4500": 11, "cnt": 11, "1500": 11, "new_siz": 11, "ind_shift": 11, "dim_siz": 11, "scatter_dim": 11, "dens": 11, "built": 11, "mul": 11, "val0": 11, "ind0": 11, "action": 11, "packag": [0, 12, 13, 16], "subpackag": 16, "content": [12, 16], "instal": [0, 12], "quickstart": 0, "commit": 0, "standard": 0, "pull": 0, "request": [], "matchbench": [0, 12, 13, 14], "git": 13, "clone": 13, "code": [12, 13, 14], "github": [12, 13], "com": [12, 13], "ruc": [12, 13], "datalab": [12, 13], "cd": 13, "Then": 13, "download": 13, "requir": [12, 13], "we": [12, 13, 14], "recommend": [12, 13], "creat": [12, 13], "new": [12, 13], "environ": 13, "python": 13, "ye": 13, "txt": 13, "correctli": 13, "you": [12, 13, 14], "script": 13, "usag": 13, "our": [12, 13], "quick_start": 13, "dbp15k": 13, "obtain": 13, "6689": 13, "2311": 13, "time": 13, "638": 13, "3260": 13, "2403": 13, "556": 13, "1548": 13, "7288": 13, "565": 13, "1065": 13, "0902": 13, "602": 13, "806": 13, "7230": 13, "583": 13, "687": 13, "2281": 13, "530": 13, "619": 13, "2196": 13, "531": 13, "591": 13, "5603": 13, "543": 13, "567": 13, "9871": 13, "547": 13, "540": 13, "8281": 13, "525000": 13, "10385": 13, "92981": 13, "98352": 13, "98800": 13, "98905": 13, "9505128802240135": 13, "109": 13, "506": 13, "9796": 13, "545": 13, "470": 13, "5649": 13, "12": 13, "458": 13, "5844": 13, "13": 13, "450": 13, "8304": 13, "537": 13, "14": 13, "426": 13, "3590": 13, "541": 13, "424": 13, "3448": 13, "539": 13, "407": 13, "6610": 13, "523": 13, "17": 13, "386": 13, "2728": 13, "546": 13, "18": 13, "381": 13, "6279": 13, "19": 13, "368": 13, "2346": 13, "548": 13, "94629": 13, "98581": 13, "98790": 13, "9618200846400549": 13, "182": 13, "want": [12, 13], "chang": 13, "so": 13, "far": 13, "005": 13, "bellow": 13, "quick_start_rrea": 13, "develop": 0, "guid": 0, "contribut": 12, "messag": 12, "easi": 12, "explicit": 12, "histori": 12, "purpos": 12, "replac": 12, "feat": 12, "introduc": 12, "codebas": 12, "correl": 12, "minor": 12, "semant": 12, "version": 12, "fix": 12, "patch": 12, "bug": 12, "your": [0, 12], "doc": 12, "style": 12, "miss": 12, "semicolon": 12, "whitespac": 12, "refactor": 12, "neither": 12, "nor": 12, "perf": 12, "improv": 12, "mai": 12, "influenc": 12, "contextu": 12, "inform": 12, "parenthesi": 12, "repositori": [12, 14], "gen": 12, "ref": 12, "append": 12, "api": 12, "major": [12, 14], "concis": 12, "histor": 12, "here": 12, "sever": 12, "project": 12, "better": 12, "understand": 12, "about": 12, "befor": 12, "exclam": 12, "ad": 12, "draw": 12, "manag": 12, "www": 12, "conventionalcommit": 12, "org": 12, "v1": 12, "jocha": 12, "picturess": 12, "wiki": 12, "anthonincl": 12, "flutter": 12, "mytind": 12, "comment": 0, "anyon": 12, "interest": 12, "welcom": 12, "particip": 12, "contributor": 12, "ask": 12, "embark": 12, "signific": 12, "licens": 12, "By": 12, "submit": 12, "agre": 12, "under": 12, "hippi": 12, "yourl": 12, "aka": 12, "do": 12, "whatev": 12, "hell": 12, "qualiti": 12, "sure": 12, "adher": 12, "googl": 12, "unexpect": 12, "besid": 12, "keep": 12, "error": 12, "allow": 12, "rang": 12, "markdown": 12, "below": 12, "write": 12, "down": 12, "its": 12, "paper": 12, "reproduc": 12, "propos": 12, "share": 12, "extra": 12, "url": 12, "relev": 12, "pull23": 12, "pull24": 12, "youkpan": 12, "introduct": 0, "own": 0, "integr": 14, "ecosystem": 14, "three": 14, "interfac": 14, "cover": 14, "categori": 14, "resolut": 14, "er": 14, "column": 14, "annot": 14, "cta": 14, "schema": 14, "sm": 14, "52": 14, "benchmark": 14, "23": 14, "back": 14, "homepag": 14}, "objects": {"": [[1, 0, 0, "-", "matchbench"]], "matchbench": [[2, 0, 0, "-", "dataset"], [3, 0, 0, "-", "evaluator"], [4, 0, 0, "-", "model"], [9, 0, 0, "-", "pair_gen"], [10, 0, 0, "-", "trainer"], [11, 0, 0, "-", "utils"]], "matchbench.dataset": [[2, 0, 0, "-", "load"]], "matchbench.dataset.load": [[2, 1, 1, "", "list_datasets"], [2, 1, 1, "", "load_datasets"]], "matchbench.evaluator": [[3, 0, 0, "-", "base_evaluator"], [3, 0, 0, "-", "metrics"]], "matchbench.evaluator.base_evaluator": [[3, 2, 1, "", "CTAEvaluator"], [3, 2, 1, "", "EAEvaluator"], [3, 2, 1, "", "EMEvaluator"], [3, 2, 1, "", "Evaluator"], [3, 2, 1, "", "SMEvaluator"]], "matchbench.evaluator.base_evaluator.CTAEvaluator": [[3, 3, 1, "", "evaluate"]], "matchbench.evaluator.base_evaluator.EAEvaluator": [[3, 3, 1, "", "evaluate"]], "matchbench.evaluator.base_evaluator.EMEvaluator": [[3, 3, 1, "", "evaluate"]], "matchbench.evaluator.base_evaluator.Evaluator": [[3, 3, 1, "", "evaluate"]], "matchbench.evaluator.base_evaluator.SMEvaluator": [[3, 3, 1, "", "evaluate"]], "matchbench.evaluator.metrics": [[3, 1, 1, "", "CSLS_cal"], [3, 1, 1, "", "batch_mat_mm"], [3, 1, 1, "", "batch_topk"], [3, 1, 1, "", "cos_sim_mat_generate"], [3, 1, 1, "", "hits"]], "matchbench.model": [[4, 0, 0, "-", "base_model"], [5, 0, 0, "-", "column_type_annotation"], [6, 0, 0, "-", "entity_alignment"], [8, 0, 0, "-", "schema_matching"]], "matchbench.model.base_model": [[4, 2, 1, "", "CTAModel"], [4, 2, 1, "", "EAModel"], [4, 2, 1, "", "EMModel"], [4, 2, 1, "", "GeneralModel"], [4, 2, 1, "", "SMModel"], [4, 1, 1, "", "f1_score_multilabel"]], "matchbench.model.base_model.CTAModel": [[4, 3, 1, "", "calculate_loss"], [4, 3, 1, "", "compute_metric"], [4, 3, 1, "", "load_source_target"], [4, 4, 1, "", "training"]], "matchbench.model.base_model.EAModel": [[4, 3, 1, "", "compute_metric"], [4, 3, 1, "", "compute_metric_stage_2"], [4, 3, 1, "", "get_emb"], [4, 3, 1, "", "get_emb_r"], [4, 3, 1, "", "load_source_target"], [4, 3, 1, "", "predict"], [4, 3, 1, "", "predict_stage_2"], [4, 4, 1, "", "training"]], "matchbench.model.base_model.EMModel": [[4, 3, 1, "", "calculate_thresold"], [4, 3, 1, "", "compute_metric"], [4, 3, 1, "", "get_sentence"], [4, 3, 1, "", "load_source_target"], [4, 4, 1, "", "training"]], "matchbench.model.base_model.GeneralModel": [[4, 3, 1, "", "calculate_loss"], [4, 3, 1, "", "encode"], [4, 3, 1, "", "forward"], [4, 3, 1, "", "match"], [4, 3, 1, "", "predict"], [4, 3, 1, "", "prepare_dataloader"], [4, 3, 1, "", "run_step"], [4, 3, 1, "", "serialize"], [4, 4, 1, "", "training"]], "matchbench.model.base_model.SMModel": [[4, 3, 1, "", "compute_metric"], [4, 4, 1, "", "training"]], "matchbench.model.column_type_annotation": [[5, 0, 0, "-", "doduo"], [5, 0, 0, "-", "sato"], [5, 0, 0, "-", "sherlock"]], "matchbench.model.column_type_annotation.doduo": [[5, 2, 1, "", "Doduo"]], "matchbench.model.column_type_annotation.doduo.Doduo": [[5, 3, 1, "", "forward"], [5, 4, 1, "", "label_mapping"], [5, 3, 1, "", "predict"], [5, 3, 1, "", "prepare_dataloader"], [5, 3, 1, "", "run_step"], [5, 3, 1, "", "tokenize"], [5, 4, 1, "", "training"]], "matchbench.model.column_type_annotation.sato": [[5, 2, 1, "", "CRF"], [5, 2, 1, "", "Sato"]], "matchbench.model.column_type_annotation.sato.CRF": [[5, 3, 1, "", "decode"], [5, 3, 1, "", "forward"], [5, 3, 1, "", "init_transition"], [5, 3, 1, "", "reset_parameters"], [5, 4, 1, "", "training"]], "matchbench.model.column_type_annotation.sato.Sato": [[5, 4, 1, "", "label_mapping"], [5, 3, 1, "", "parameters"], [5, 3, 1, "", "predict"], [5, 3, 1, "", "prepare_dataloader"], [5, 3, 1, "", "run_step"], [5, 4, 1, "", "training"]], "matchbench.model.column_type_annotation.sherlock": [[5, 2, 1, "", "Sherlock"]], "matchbench.model.column_type_annotation.sherlock.Sherlock": [[5, 3, 1, "", "forward"], [5, 4, 1, "", "label_mapping"], [5, 3, 1, "", "predict"], [5, 3, 1, "", "prepare_dataloader"], [5, 3, 1, "", "run_step"], [5, 3, 1, "", "serialize"], [5, 4, 1, "", "training"]], "matchbench.model.entity_alignment": [[6, 0, 0, "-", "Dual_AMN"], [6, 0, 0, "-", "bertint"], [6, 0, 0, "-", "kecg"], [6, 0, 0, "-", "lightea"], [6, 0, 0, "-", "rrea"], [6, 0, 0, "-", "sdea"], [6, 0, 0, "-", "seu"]], "matchbench.model.entity_alignment.Dual_AMN": [[6, 2, 1, "", "Dual_AMN"], [6, 2, 1, "", "NR_GraphAttention"]], "matchbench.model.entity_alignment.Dual_AMN.Dual_AMN": [[6, 3, 1, "", "encode"], [6, 3, 1, "", "get_emb"], [6, 3, 1, "", "load_source_target"], [6, 3, 1, "", "predict"], [6, 3, 1, "", "prepare_dataloader"], [6, 3, 1, "", "run_step"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.Dual_AMN.NR_GraphAttention": [[6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.bertint": [[6, 2, 1, "", "Basic_Bert_Unit_model"], [6, 2, 1, "", "BertInt"], [6, 2, 1, "", "MLP"], [6, 2, 1, "", "PairwiseDataset"], [6, 2, 1, "", "RelationalDataloader"], [6, 1, 1, "", "all_entity_pairs_gene"], [6, 1, 1, "", "attributeValue_emb_gene"], [6, 1, 1, "", "attributeView_interaction_F_gene"], [6, 1, 1, "", "batch_dual_aggregation_feature_gene"], [6, 1, 1, "", "candidate_generate"], [6, 1, 1, "", "clean_attribute_data"], [6, 1, 1, "", "desornameView_interaction_F_gene"], [6, 1, 1, "", "dump_other_data"], [6, 1, 1, "", "ent2attributeValues_gene"], [6, 1, 1, "", "get_attributeValue_embedding"], [6, 1, 1, "", "get_attributeView_interaction_feature"], [6, 1, 1, "", "get_attribute_value_type"], [6, 1, 1, "", "get_entity_embedding"], [6, 1, 1, "", "get_neighView_and_desView_interaction_feature"], [6, 1, 1, "", "get_tokens_of_value"], [6, 1, 1, "", "kernel_mus"], [6, 1, 1, "", "kernel_sigmas"], [6, 1, 1, "", "neigh_ent_dict_gene"], [6, 1, 1, "", "neighborView_interaction_F_gene"], [6, 1, 1, "", "padding_to_longest"], [6, 1, 1, "", "read_att_data"], [6, 1, 1, "", "read_attribute_datas"], [6, 1, 1, "", "remove_one_to_N_att_data_by_threshold"], [6, 1, 1, "", "sort_a"], [6, 1, 1, "", "test_read_emb"]], "matchbench.model.entity_alignment.bertint.Basic_Bert_Unit_model": [[6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.bertint.BertInt": [[6, 3, 1, "", "calculate_loss"], [6, 3, 1, "", "chuliyixia"], [6, 3, 1, "", "compute_metric_stage_2"], [6, 3, 1, "", "encode"], [6, 3, 1, "", "forward"], [6, 3, 1, "", "load_source_target"], [6, 3, 1, "", "matcher"], [6, 3, 1, "", "negative_sample"], [6, 3, 1, "", "predict_stage_2"], [6, 3, 1, "", "prepare_dataloader"], [6, 3, 1, "", "run_step"], [6, 3, 1, "", "serialize"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.bertint.MLP": [[6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.bertint.RelationalDataloader": [[6, 3, 1, "", "train_pair_index_gene"]], "matchbench.model.entity_alignment.kecg": [[6, 2, 1, "", "GAT"], [6, 2, 1, "", "MultiHeadGraphAttention"], [6, 2, 1, "", "SpecialSpmm"], [6, 2, 1, "", "SpecialSpmmFunction"]], "matchbench.model.entity_alignment.kecg.GAT": [[6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.kecg.MultiHeadGraphAttention": [[6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.kecg.SpecialSpmm": [[6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.kecg.SpecialSpmmFunction": [[6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"]], "matchbench.model.entity_alignment.lightea": [[6, 2, 1, "", "LightEA"], [6, 1, 1, "", "load_aligned_pair"], [6, 1, 1, "", "load_graph"], [6, 1, 1, "", "load_name_features"]], "matchbench.model.entity_alignment.lightea.LightEA": [[6, 3, 1, "", "batch_sparse_matmul"], [6, 3, 1, "", "compute_metric"], [6, 3, 1, "", "get_features"], [6, 3, 1, "", "load_source_target"], [6, 3, 1, "", "predict"], [6, 3, 1, "", "prepare_dataloader"], [6, 3, 1, "", "random_projection"], [6, 3, 1, "", "segment_sum"], [6, 3, 1, "", "sparse_sinkhorn_sims"], [6, 3, 1, "", "test"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.rrea": [[6, 2, 1, "", "NR_GraphAttention"], [6, 2, 1, "", "RREA"]], "matchbench.model.entity_alignment.rrea.NR_GraphAttention": [[6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.rrea.RREA": [[6, 3, 1, "", "encode"], [6, 3, 1, "", "get_emb"], [6, 3, 1, "", "load_source_target"], [6, 3, 1, "", "negative_sample"], [6, 3, 1, "", "predict"], [6, 3, 1, "", "prepare_dataloader"], [6, 3, 1, "", "run_step"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.sdea": [[6, 2, 1, "", "Basic_Bert_Unit_model"], [6, 2, 1, "", "BertDataLoader"], [6, 1, 1, "", "DBPpreprocess"], [6, 2, 1, "", "Dataset"], [6, 2, 1, "", "GRUAttnNet"], [6, 2, 1, "", "Highway"], [6, 2, 1, "", "KBStore"], [6, 2, 1, "", "OEAFileType"], [6, 2, 1, "", "PairwiseDataset"], [6, 2, 1, "", "RelationDataset"], [6, 2, 1, "", "RelationModel"], [6, 2, 1, "", "RelationValidDataset"], [6, 2, 1, "", "SDEA"], [6, 1, 1, "", "compress_uri"], [6, 1, 1, "", "load_list"], [6, 1, 1, "", "load_list_p"], [6, 1, 1, "", "oea_attr_line"], [6, 1, 1, "", "oea_rel_line"], [6, 1, 1, "", "save_dict_p"], [6, 1, 1, "", "save_list"], [6, 1, 1, "", "save_list_p"], [6, 1, 1, "", "stripSquareBrackets"], [6, 1, 1, "", "strip_square_brackets"], [6, 1, 1, "", "text_to_word_sequence"], [6, 1, 1, "", "ttl_no_compress_line"]], "matchbench.model.entity_alignment.sdea.Basic_Bert_Unit_model": [[6, 4, 1, "", "basic_input_dim"], [6, 4, 1, "", "basic_output_dim"], [6, 4, 1, "", "bert_model"], [6, 4, 1, "", "dropout"], [6, 3, 1, "", "forward"], [6, 4, 1, "", "plm_path"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.sdea.BertDataLoader": [[6, 3, 1, "", "line_to_feature"], [6, 3, 1, "", "load_data"], [6, 3, 1, "", "load_freq"], [6, 3, 1, "", "load_saved_data"], [6, 3, 1, "", "run"], [6, 3, 1, "", "save_data"], [6, 3, 1, "", "save_token_freq"]], "matchbench.model.entity_alignment.sdea.Dataset": [[6, 3, 1, "", "outputs_csv"], [6, 3, 1, "", "outputs_python"], [6, 3, 1, "", "outputs_tab"]], "matchbench.model.entity_alignment.sdea.GRUAttnNet": [[6, 3, 1, "", "attn_net_with_w"], [6, 3, 1, "", "build_model"], [6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.sdea.Highway": [[6, 3, 1, "", "forward"], [6, 3, 1, "", "init_Linear"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.sdea.KBStore": [[6, 3, 1, "", "add_fact"], [6, 3, 1, "", "add_item"], [6, 3, 1, "", "add_to_blocks"], [6, 3, 1, "", "add_tuple"], [6, 3, 1, "", "add_word_level_blocks"], [6, 3, 1, "", "calculate_func"], [6, 3, 1, "", "get_or_add_item"], [6, 3, 1, "", "get_property_table_line"], [6, 3, 1, "", "load"], [6, 3, 1, "", "load_entities"], [6, 3, 1, "", "load_facts"], [6, 3, 1, "", "load_kb"], [6, 3, 1, "", "load_kb_from_saved"], [6, 3, 1, "", "load_literals"], [6, 3, 1, "", "load_properties"], [6, 3, 1, "", "load_relations"], [6, 3, 1, "", "save_base_info"], [6, 3, 1, "", "save_datas"], [6, 3, 1, "", "save_facts"], [6, 3, 1, "", "save_property_table"], [6, 3, 1, "", "save_seq_form"]], "matchbench.model.entity_alignment.sdea.OEAFileType": [[6, 4, 1, "", "attr"], [6, 4, 1, "", "rel"], [6, 4, 1, "", "ttl_full"]], "matchbench.model.entity_alignment.sdea.RelationDataset": [[6, 3, 1, "", "get_matrix"], [6, 3, 1, "", "get_neighbor_matrix"]], "matchbench.model.entity_alignment.sdea.RelationModel": [[6, 3, 1, "", "case_study"], [6, 4, 1, "", "combiner"], [6, 4, 1, "", "ent_embedding1"], [6, 4, 1, "", "ent_embedding2"], [6, 3, 1, "", "forward"], [6, 3, 1, "", "get_emb"], [6, 3, 1, "", "get_ent_embedding"], [6, 3, 1, "", "get_neighbors_batch"], [6, 3, 1, "", "get_rel_embeds"], [6, 3, 1, "", "pos_neg_count"], [6, 4, 1, "", "rnn"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.sdea.SDEA": [[6, 3, 1, "", "a"], [6, 4, 1, "", "all_embed1s"], [6, 4, 1, "", "all_embed2s"], [6, 3, 1, "", "calculate_loss"], [6, 3, 1, "", "class_name_str"], [6, 3, 1, "", "encode"], [6, 4, 1, "", "entity_mode"], [6, 3, 1, "", "forward"], [6, 3, 1, "", "get_tensor_data"], [6, 4, 1, "", "if_neg_sample_2"], [6, 3, 1, "", "load_links"], [6, 3, 1, "", "load_links_sep"], [6, 3, 1, "", "load_source_target"], [6, 3, 1, "", "negative_sample"], [6, 3, 1, "", "oea_truth_line"], [6, 3, 1, "", "prepare_dataloader"], [6, 3, 1, "", "reduce_tokens"], [6, 3, 1, "", "reduce_tokens_with_freq"], [6, 3, 1, "", "run_step"], [6, 4, 1, "", "training"]], "matchbench.model.entity_alignment.seu": [[6, 2, 1, "", "SEU"], [6, 1, 1, "", "load_aligned_pair"], [6, 1, 1, "", "load_triples"], [6, 1, 1, "", "test"]], "matchbench.model.entity_alignment.seu.SEU": [[6, 3, 1, "", "cal_sims"], [6, 3, 1, "", "compute_metric"], [6, 3, 1, "", "load_source_target"], [6, 3, 1, "", "predict"], [6, 3, 1, "", "prepare_dataloader"], [6, 4, 1, "", "training"]], "matchbench.model.entity_matching": [[7, 0, 0, "-", "ditto"], [7, 0, 0, "-", "jointbert"], [7, 0, 0, "-", "robem"]], "matchbench.model.entity_matching.ditto": [[7, 2, 1, "", "DKInjector"], [7, 2, 1, "", "Ditto"], [7, 2, 1, "", "DittoDataLoader"], [7, 2, 1, "", "GeneralDKInjector"], [7, 2, 1, "", "ProductDKInjector"], [7, 2, 1, "", "Summarizer"]], "matchbench.model.entity_matching.ditto.DKInjector": [[7, 3, 1, "", "initialize"], [7, 3, 1, "", "transform"], [7, 3, 1, "", "transform_file"]], "matchbench.model.entity_matching.ditto.Ditto": [[7, 3, 1, "", "calculate_loss"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "load_source_target"], [7, 3, 1, "", "predict"], [7, 3, 1, "", "prepare_dataloader"], [7, 3, 1, "", "run_step"], [7, 4, 1, "", "training"]], "matchbench.model.entity_matching.ditto.DittoDataLoader": [[7, 3, 1, "", "pad"]], "matchbench.model.entity_matching.ditto.GeneralDKInjector": [[7, 3, 1, "", "initialize"], [7, 3, 1, "", "transform"]], "matchbench.model.entity_matching.ditto.ProductDKInjector": [[7, 3, 1, "", "initialize"], [7, 3, 1, "", "transform"]], "matchbench.model.entity_matching.ditto.Summarizer": [[7, 3, 1, "", "build_index"], [7, 4, 1, "", "config"], [7, 3, 1, "", "get_len"], [7, 4, 1, "", "tokenizer"], [7, 3, 1, "", "transform"], [7, 3, 1, "", "transform_file"]], "matchbench.model.entity_matching.jointbert": [[7, 1, 1, "", "BCEWithLogitsLoss"], [7, 2, 1, "", "BertDataLoaderJoint"], [7, 2, 1, "", "DataCollatorWithPadding"], [7, 2, 1, "", "JointBert"], [7, 2, 1, "", "JointBertPrep"], [7, 1, 1, "", "assign_clusterid"], [7, 1, 1, "", "cluster_id_process"], [7, 1, 1, "", "get_cluster_id"], [7, 1, 1, "", "get_encoder_deepmatcher"], [7, 1, 1, "", "process_to_bert"]], "matchbench.model.entity_matching.jointbert.BertDataLoaderJoint": [[7, 4, 1, "", "batch_size"], [7, 4, 1, "", "dataset"], [7, 4, 1, "", "drop_last"], [7, 4, 1, "", "num_workers"], [7, 4, 1, "", "pin_memory"], [7, 4, 1, "", "prefetch_factor"], [7, 4, 1, "", "sampler"], [7, 3, 1, "", "split_validation"], [7, 4, 1, "", "timeout"]], "matchbench.model.entity_matching.jointbert.DataCollatorWithPadding": [[7, 3, 1, "", "mask_tokens"], [7, 4, 1, "", "max_length"], [7, 4, 1, "", "mlm"], [7, 4, 1, "", "mlm_probability"], [7, 4, 1, "", "pad_to_multiple_of"], [7, 4, 1, "", "padding"], [7, 4, 1, "", "tokenizer"]], "matchbench.model.entity_matching.jointbert.JointBert": [[7, 3, 1, "", "calc_weights_label"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "pair_generator"], [7, 3, 1, "", "predict"], [7, 3, 1, "", "prepare_dataloader"], [7, 3, 1, "", "run_step"], [7, 4, 1, "", "training"]], "matchbench.model.entity_matching.robem": [[7, 2, 1, "", "ASLSingleLabel"], [7, 2, 1, "", "AugMode"], [7, 2, 1, "", "BasicAug"], [7, 2, 1, "", "EmDataset"], [7, 2, 1, "", "Highway"], [7, 2, 1, "", "RobEM"], [7, 2, 1, "", "RobertaClassificationHead"], [7, 2, 1, "", "RobustAugmenter"], [7, 2, 1, "", "SimpleClassifier"], [7, 2, 1, "", "Summarizer"], [7, 1, 1, "", "cosine_similarity"], [7, 1, 1, "", "set_to_device"]], "matchbench.model.entity_matching.robem.ASLSingleLabel": [[7, 3, 1, "", "forward"], [7, 4, 1, "", "training"]], "matchbench.model.entity_matching.robem.AugMode": [[7, 4, 1, "", "RANDOM_DEL"], [7, 4, 1, "", "REMOVE_CHAR_LESS_THAN"], [7, 4, 1, "", "REMOVE_STOP_WORD"], [7, 4, 1, "", "ROB_ALL"], [7, 4, 1, "", "ROB_SFL"], [7, 4, 1, "", "ROB_SWAP"]], "matchbench.model.entity_matching.robem.BasicAug": [[7, 3, 1, "", "augment"]], "matchbench.model.entity_matching.robem.EmDataset": [[7, 3, 1, "", "input_serializer"]], "matchbench.model.entity_matching.robem.Highway": [[7, 3, 1, "", "forward"], [7, 4, 1, "", "training"]], "matchbench.model.entity_matching.robem.RobEM": [[7, 3, 1, "", "context_forward"], [7, 3, 1, "", "context_similarity_layers"], [7, 3, 1, "", "forward"], [7, 3, 1, "", "get_lm"], [7, 3, 1, "", "get_lm_class"], [7, 3, 1, "", "get_lm_dim"], [7, 3, 1, "", "get_tokenizers"], [7, 3, 1, "", "has_type_token"], [7, 3, 1, "", "load_source_target"], [7, 3, 1, "", "predict"], [7, 3, 1, "", "prepare_dataloader"], [7, 3, 1, "", "reset_weights"], [7, 3, 1, "", "resize_embedding"], [7, 3, 1, "", "run_step"], [7, 4, 1, "", "training"]], "matchbench.model.entity_matching.robem.RobertaClassificationHead": [[7, 3, 1, "", "forward"], [7, 4, 1, "", "training"]], "matchbench.model.entity_matching.robem.RobustAugmenter": [[7, 3, 1, "", "augment_sent"]], "matchbench.model.entity_matching.robem.SimpleClassifier": [[7, 3, 1, "", "forward"], [7, 4, 1, "", "training"]], "matchbench.model.entity_matching.robem.Summarizer": [[7, 3, 1, "", "summarize"]], "matchbench.model.schema_matching": [[8, 0, 0, "-", "embdi"]], "matchbench.model.schema_matching.embdi": [[8, 2, 1, "", "Edge"], [8, 2, 1, "", "EdgeList"], [8, 2, 1, "", "Embdi"], [8, 2, 1, "", "Graph"], [8, 2, 1, "", "Node"], [8, 2, 1, "", "RandomWalk"]], "matchbench.model.schema_matching.embdi.EdgeList": [[8, 3, 1, "", "convert_cell_value"], [8, 3, 1, "", "convert_to_dict"], [8, 3, 1, "", "convert_to_numeric"], [8, 3, 1, "", "evaluate_frequencies"], [8, 3, 1, "", "f_no_smoothing"], [8, 3, 1, "", "find_intersection_flatten"], [8, 3, 1, "", "get_edgelist"], [8, 3, 1, "", "get_prefixes"], [8, 3, 1, "", "inverse_freq"], [8, 3, 1, "", "inverse_smooth"], [8, 3, 1, "", "log_freq"], [8, 3, 1, "", "prepare_split"], [8, 3, 1, "", "smooth_exp"], [8, 3, 1, "", "smooth_freq"]], "matchbench.model.schema_matching.embdi.Embdi": [[8, 3, 1, "", "load_source_target"], [8, 3, 1, "", "predict"], [8, 3, 1, "", "train"], [8, 4, 1, "", "training"]], "matchbench.model.schema_matching.embdi.Graph": [[8, 3, 1, "", "add_edge"], [8, 3, 1, "", "add_similarities"], [8, 3, 1, "", "compute_n_sentences"], [8, 3, 1, "", "get_graph"], [8, 3, 1, "", "get_node_list"], [8, 3, 1, "", "produce_intersection"]], "matchbench.model.schema_matching.embdi.Node": [[8, 3, 1, "", "add_neighbor"], [8, 3, 1, "", "add_similar"], [8, 3, 1, "", "get_random_neighbor"], [8, 3, 1, "", "get_random_replacement"], [8, 3, 1, "", "get_random_start"], [8, 3, 1, "", "normalize_neighbors"], [8, 3, 1, "", "set_frequency"]], "matchbench.model.schema_matching.embdi.RandomWalk": [[8, 3, 1, "", "get_both_walks"], [8, 3, 1, "", "get_reversed_walk"], [8, 3, 1, "", "get_walk"], [8, 3, 1, "", "replace_numeric_value"], [8, 3, 1, "", "replace_string_value"]], "matchbench.pair_gen": [[9, 0, 0, "-", "blocker"], [9, 0, 0, "-", "data_augmenter"], [9, 0, 0, "-", "neg_sampler"]], "matchbench.pair_gen.data_augmenter": [[9, 2, 1, "", "Augmenter"]], "matchbench.pair_gen.data_augmenter.Augmenter": [[9, 3, 1, "", "augment"], [9, 3, 1, "", "augment_sent"], [9, 3, 1, "", "sample_position"], [9, 3, 1, "", "sample_span"]], "matchbench.pair_gen.neg_sampler": [[9, 2, 1, "", "NegativeSampler"]], "matchbench.pair_gen.neg_sampler.NegativeSampler": [[9, 3, 1, "", "generate_train_tups"], [9, 3, 1, "", "get_candidate_dict"], [9, 3, 1, "", "get_dataloader"]], "matchbench.trainer": [[10, 2, 1, "", "TrainingArgument"], [10, 0, 0, "-", "base_trainer"], [10, 0, 0, "-", "training_arguments"]], "matchbench.trainer.TrainingArgument": [[10, 4, 1, "", "aug_in_batch"], [10, 4, 1, "", "clip_grad"], [10, 4, 1, "", "dataset_name"], [10, 4, 1, "", "device"], [10, 4, 1, "", "eval_epoch"], [10, 4, 1, "", "fp"], [10, 4, 1, "", "log_step"], [10, 4, 1, "", "logging_dir"], [10, 4, 1, "", "lr_scheduler"], [10, 4, 1, "", "mid_file_dir"], [10, 4, 1, "", "output_dir"], [10, 4, 1, "", "save"], [10, 4, 1, "", "save_epochs"], [10, 4, 1, "", "test_batch_size"], [10, 4, 1, "", "train_batch_size"], [10, 4, 1, "", "train_batch_size_after_negsamp"], [10, 4, 1, "", "use_dm_optimizer"], [10, 4, 1, "", "use_optimizer_grouped_parameters"]], "matchbench.trainer.base_trainer": [[10, 2, 1, "", "EmbeddingTrainer"], [10, 2, 1, "", "Trainer"], [10, 2, 1, "", "TrainingContainer"], [10, 2, 1, "", "TwoStageTrainer"], [10, 2, 1, "", "WarmupTrainer"]], "matchbench.trainer.base_trainer.EmbeddingTrainer": [[10, 3, 1, "", "train"]], "matchbench.trainer.base_trainer.Trainer": [[10, 3, 1, "", "train"]], "matchbench.trainer.base_trainer.TrainingContainer": [[10, 3, 1, "", "train"]], "matchbench.trainer.base_trainer.TwoStageTrainer": [[10, 3, 1, "", "train"]], "matchbench.trainer.base_trainer.WarmupTrainer": [[10, 3, 1, "", "auto_mixda"], [10, 3, 1, "", "sharpen"], [10, 3, 1, "", "train"], [10, 3, 1, "", "train_baseline_epoch"]], "matchbench.trainer.training_arguments": [[10, 2, 1, "", "TrainingArgument"], [10, 2, 1, "", "TwoStageTrainingArgument"]], "matchbench.trainer.training_arguments.TrainingArgument": [[10, 4, 1, "", "aug_in_batch"], [10, 4, 1, "", "clip_grad"], [10, 4, 1, "", "dataset_name"], [10, 4, 1, "", "device"], [10, 4, 1, "", "eval_epoch"], [10, 4, 1, "", "fp"], [10, 4, 1, "", "log_step"], [10, 4, 1, "", "lr_scheduler"], [10, 4, 1, "", "mid_file_dir"], [10, 4, 1, "", "save"], [10, 4, 1, "", "save_epochs"], [10, 4, 1, "", "test_batch_size"], [10, 4, 1, "", "train_batch_size"], [10, 4, 1, "", "train_batch_size_after_negsamp"], [10, 4, 1, "", "use_dm_optimizer"], [10, 4, 1, "", "use_optimizer_grouped_parameters"]], "matchbench.trainer.training_arguments.TwoStageTrainingArgument": [[10, 4, 1, "", "eval_epoch_2"], [10, 4, 1, "", "first_stage_model_path"], [10, 4, 1, "", "learning_rate_2"], [10, 4, 1, "", "num_train_epochs_2"], [10, 4, 1, "", "test_batch_size_2"], [10, 4, 1, "", "train_batch_size_2"], [10, 4, 1, "", "train_batch_size_after_negsamp_2"], [10, 4, 1, "", "weight_decay_2"]], "matchbench.utils": [[11, 0, 0, "-", "column_feature"], [11, 0, 0, "-", "dto"], [11, 0, 0, "-", "emb_loader"], [11, 0, 0, "-", "eval"], [11, 0, 0, "-", "file_tools"], [11, 0, 0, "-", "fuse"], [11, 0, 0, "-", "load"], [11, 0, 0, "-", "text_sim"], [11, 0, 0, "-", "text_utils"], [11, 0, 0, "-", "utils"]], "matchbench.utils.column_feature": [[11, 1, 1, "", "convert_string_lists_to_lists"], [11, 1, 1, "", "extract_bag_of_characters_features"], [11, 1, 1, "", "extract_bag_of_words_features"], [11, 1, 1, "", "extract_topic_features"], [11, 1, 1, "", "extract_word_embeddings_features"], [11, 1, 1, "", "infer_paragraph_embeddings_features"], [11, 1, 1, "", "process_col"]], "matchbench.utils.dto": [[11, 1, 1, "", "make_file"], [11, 1, 1, "", "readobj"], [11, 1, 1, "", "save_array"], [11, 1, 1, "", "save_map"], [11, 1, 1, "", "saveobj"], [11, 1, 1, "", "to_json"]], "matchbench.utils.emb_loader": [[11, 2, 1, "", "BERT"], [11, 2, 1, "", "EmbeddingLoader"], [11, 1, 1, "", "average_embeds_over_words"], [11, 1, 1, "", "minus_mask"]], "matchbench.utils.emb_loader.BERT": [[11, 3, 1, "", "bert_encode"], [11, 3, 1, "", "pooled_bert_encode"], [11, 3, 1, "", "pooled_encode_batched"], [11, 3, 1, "", "to"]], "matchbench.utils.emb_loader.EmbeddingLoader": [[11, 4, 1, "", "TR_Models"], [11, 3, 1, "", "get_embed_list"], [11, 3, 1, "", "get_tokenizer"], [11, 3, 1, "", "pretrained_models"]], "matchbench.utils.eval": [[11, 1, 1, "", "bi_csls_matrix"], [11, 1, 1, "", "csls_impl"], [11, 1, 1, "", "evaluate_embeds"], [11, 1, 1, "", "evaluate_sim_matrix"], [11, 1, 1, "", "get_cos_sim"], [11, 1, 1, "", "get_csls_sim"], [11, 1, 1, "", "get_hit_k"], [11, 1, 1, "", "get_mrr"], [11, 1, 1, "", "get_topk_sim"], [11, 1, 1, "", "sparse_acc"], [11, 1, 1, "", "sparse_top_k"], [11, 1, 1, "", "truncated_mrr"]], "matchbench.utils.file_tools": [[11, 1, 1, "", "att_file_make"]], "matchbench.utils.fuse": [[11, 1, 1, "", "naive_sim_fuser"], [11, 1, 1, "", "subscribe"]], "matchbench.utils.load": [[11, 1, 1, "", "load_model"], [11, 1, 1, "", "save_model"], [11, 1, 1, "", "set_seed"]], "matchbench.utils.text_sim": [[11, 1, 1, "", "approximate_sim"], [11, 1, 1, "", "calc_topk_sim"], [11, 1, 1, "", "get_bert_maxpooling_embs"], [11, 1, 1, "", "get_ent_token_info"], [11, 1, 1, "", "lazy_topk"], [11, 1, 1, "", "makeset"], [11, 1, 1, "", "matrix_sinkhorn"], [11, 1, 1, "", "minhash_select_pairs"], [11, 1, 1, "", "sinkhorn_process"], [11, 1, 1, "", "sparse_semantic_sim"], [11, 1, 1, "", "sparse_string_sim"], [11, 1, 1, "", "token_level_similarity"], [11, 1, 1, "", "union"]], "matchbench.utils.text_utils": [[11, 2, 1, "", "EntTokenInfo"], [11, 1, 1, "", "cpm_embedding"], [11, 1, 1, "", "edit_dist_of"], [11, 1, 1, "", "embed_word2entity"], [11, 1, 1, "", "faiss_search_impl"], [11, 1, 1, "", "gen_mean"], [11, 1, 1, "", "get_batch_sim"], [11, 1, 1, "", "get_count"], [11, 1, 1, "", "get_fasttext_aligned_vectors"], [11, 1, 1, "", "get_name_feature_map"], [11, 1, 1, "", "get_punctuations"], [11, 1, 1, "", "get_tf_idf"], [11, 1, 1, "", "global_level_semantic_sim"], [11, 1, 1, "", "normalize_vectors"], [11, 1, 1, "", "pairwise_edit_distance"], [11, 1, 1, "", "reduce"], [11, 1, 1, "", "remove_prefix_to_list"], [11, 1, 1, "", "remove_punc"], [11, 1, 1, "", "selected_edit_distance"], [11, 1, 1, "", "tokenize"]], "matchbench.utils.text_utils.EntTokenInfo": [[11, 4, 1, "", "e2w"], [11, 4, 1, "", "emb"], [11, 3, 1, "", "ent_cnt"], [11, 4, 1, "", "ents"], [11, 3, 1, "", "filter_tokens"], [11, 3, 1, "", "get_tf_idf"], [11, 3, 1, "", "load"], [11, 3, 1, "", "save"], [11, 3, 1, "", "static_high_freq_words"], [11, 3, 1, "", "static_punc_tokens"], [11, 4, 1, "", "w2e"], [11, 3, 1, "", "word_cnt"], [11, 4, 1, "", "words"]], "matchbench.utils.utils": [[11, 1, 1, "", "add_cnt_for"], [11, 1, 1, "", "add_logs"], [11, 1, 1, "", "apply"], [11, 1, 1, "", "apply_on_sparse"], [11, 1, 1, "", "argprint"], [11, 1, 1, "", "batch_spspmm"], [11, 1, 1, "", "cosine_distance"], [11, 1, 1, "", "cosine_sim"], [11, 1, 1, "", "dense_to_sparse"], [11, 1, 1, "", "dict_values_to_tensor"], [11, 1, 1, "", "filter_which"], [11, 1, 1, "", "get_iv"], [11, 1, 1, "", "has_key"], [11, 1, 1, "", "ind2sparse"], [11, 1, 1, "", "lst_argmax"], [11, 1, 1, "", "masked_minmax"], [11, 1, 1, "", "matrix_argmax"], [11, 1, 1, "", "matrix_argmin"], [11, 1, 1, "", "minmax"], [11, 1, 1, "", "mp2list"], [11, 1, 1, "", "norm_embed"], [11, 1, 1, "", "norm_process"], [11, 1, 1, "", "orthogonal_projection"], [11, 1, 1, "", "print_size"], [11, 1, 1, "", "procrustes"], [11, 1, 1, "", "random_split"], [11, 1, 1, "", "rdpm"], [11, 1, 1, "", "rebuild_with_indices"], [11, 1, 1, "", "remain_topk_sim"], [11, 1, 1, "", "resize_sparse"], [11, 1, 1, "", "save_similarity_matrix"], [11, 1, 1, "", "save_vectors"], [11, 1, 1, "", "scatter_op"], [11, 1, 1, "", "seperate_index_type"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "sparse_argmax"], [11, 1, 1, "", "sparse_argmin"], [11, 1, 1, "", "sparse_dense_element_wise_op"], [11, 1, 1, "", "sparse_max"], [11, 1, 1, "", "sparse_min"], [11, 1, 1, "", "sparse_minmax"], [11, 1, 1, "", "sparse_softmax"], [11, 1, 1, "", "split_sp"], [11, 1, 1, "", "spmm"], [11, 1, 1, "", "spmm_ds"], [11, 1, 1, "", "spmm_sd"], [11, 1, 1, "", "spspmm"], [11, 1, 1, "", "to_dense"], [11, 1, 1, "", "to_tensor"], [11, 1, 1, "", "to_torch_sparse"], [11, 1, 1, "", "topk2spmat"], [11, 1, 1, "", "update_time_logs"], [11, 1, 1, "", "view2"], [11, 1, 1, "", "view3"], [11, 1, 1, "", "view_back"], [11, 1, 1, "", "z_score"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "fmh": 0, "": 0, "document": [0, 12], "indic": 0, "tabl": 0, "matchbench": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16], "packag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "subpackag": [1, 4], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "dataset": [2, 11, 15], "submodul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "load": [2, 11], "evalu": [3, 15], "base_evalu": 3, "metric": 3, "model": [4, 5, 6, 7, 8, 15], "base_model": 4, "column_type_annot": 5, "doduo": 5, "sato": 5, "sherlock": 5, "entity_align": 6, "dual_amn": 6, "largeea": 6, "bertint": 6, "kecg": 6, "lightea": 6, "rrea": 6, "sdea": 6, "seu": 6, "entity_match": 7, "deepmatch": 7, "ditto": 7, "jointbert": 7, "robem": 7, "rotom": 7, "schema_match": 8, "embdi": 8, "pair_gen": 9, "blocker": 9, "data_augment": 9, "neg_sampl": 9, "trainer": 10, "base_train": 10, "training_argu": 10, "util": 11, "column_featur": 11, "dto": 11, "emb_load": 11, "eval": 11, "file_tool": 11, "fuse": 11, "nxmeti": 11, "partit": 11, "sampler": 11, "text_sim": 11, "text_util": 11, "commit": 12, "standard": 12, "pull": 12, "request": 12, "get": 13, "start": 13, "instal": 13, "quickstart": 13, "develop": 12, "guid": [12, 15], "brief": 12, "introduct": [12, 14], "structur": 12, "element": 12, "type": 12, "scope": 12, "option": 12, "break": 12, "chang": 12, "descript": 12, "exampl": 12, "refer": 12, "comment": 12, "guidelin": 12, "p": 12, "r": 12, "user": 15, "your": 15, "own": 15, "build": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Welcome to fmh\u2019s documentation!": [[0, "welcome-to-fmh-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "matchbench package": [[1, "matchbench-package"]], "Subpackages": [[1, "subpackages"], [4, "subpackages"]], "Module contents": [[1, "module-matchbench"], [2, "module-matchbench.dataset"], [3, "module-matchbench.evaluator"], [4, "module-matchbench.model"], [5, "module-matchbench.model.column_type_annotation"], [6, "module-matchbench.model.entity_alignment"], [7, "module-contents"], [8, "module-matchbench.model.schema_matching"], [9, "module-matchbench.pair_gen"], [10, "module-matchbench.trainer"], [11, "module-matchbench.utils"]], "matchbench.dataset package": [[2, "matchbench-dataset-package"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"]], "matchbench.dataset.load module": [[2, "module-matchbench.dataset.load"]], "matchbench.evaluator package": [[3, "matchbench-evaluator-package"]], "matchbench.evaluator.base_evaluator module": [[3, "module-matchbench.evaluator.base_evaluator"]], "matchbench.evaluator.metrics module": [[3, "module-matchbench.evaluator.metrics"]], "matchbench.model package": [[4, "matchbench-model-package"]], "matchbench.model.base_model module": [[4, "module-matchbench.model.base_model"]], "matchbench.model.column_type_annotation package": [[5, "matchbench-model-column-type-annotation-package"]], "matchbench.model.column_type_annotation.doduo module": [[5, "module-matchbench.model.column_type_annotation.doduo"]], "matchbench.model.column_type_annotation.sato module": [[5, "module-matchbench.model.column_type_annotation.sato"]], "matchbench.model.column_type_annotation.sherlock module": [[5, "module-matchbench.model.column_type_annotation.sherlock"]], "matchbench.model.entity_alignment package": [[6, "matchbench-model-entity-alignment-package"]], "matchbench.model.entity_alignment.Dual_AMN module": [[6, "module-matchbench.model.entity_alignment.Dual_AMN"]], "matchbench.model.entity_alignment.LargeEA module": [[6, "matchbench-model-entity-alignment-largeea-module"]], "matchbench.model.entity_alignment.bertint module": [[6, "module-matchbench.model.entity_alignment.bertint"]], "matchbench.model.entity_alignment.kecg module": [[6, "module-matchbench.model.entity_alignment.kecg"]], "matchbench.model.entity_alignment.lightea module": [[6, "module-matchbench.model.entity_alignment.lightea"]], "matchbench.model.entity_alignment.rrea module": [[6, "module-matchbench.model.entity_alignment.rrea"]], "matchbench.model.entity_alignment.sdea module": [[6, "module-matchbench.model.entity_alignment.sdea"]], "matchbench.model.entity_alignment.seu module": [[6, "module-matchbench.model.entity_alignment.seu"]], "matchbench.model.entity_matching package": [[7, "matchbench-model-entity-matching-package"]], "matchbench.model.entity_matching.deepmatcher module": [[7, "matchbench-model-entity-matching-deepmatcher-module"]], "matchbench.model.entity_matching.ditto module": [[7, "module-matchbench.model.entity_matching.ditto"]], "matchbench.model.entity_matching.jointbert module": [[7, "module-matchbench.model.entity_matching.jointbert"]], "matchbench.model.entity_matching.robem module": [[7, "module-matchbench.model.entity_matching.robem"]], "matchbench.model.entity_matching.rotom module": [[7, "matchbench-model-entity-matching-rotom-module"]], "matchbench.model.schema_matching package": [[8, "matchbench-model-schema-matching-package"]], "matchbench.model.schema_matching.embdi module": [[8, "module-matchbench.model.schema_matching.embdi"]], "matchbench.pair_gen package": [[9, "matchbench-pair-gen-package"]], "matchbench.pair_gen.blocker module": [[9, "module-matchbench.pair_gen.blocker"]], "matchbench.pair_gen.data_augmenter module": [[9, "module-matchbench.pair_gen.data_augmenter"]], "matchbench.pair_gen.neg_sampler module": [[9, "module-matchbench.pair_gen.neg_sampler"]], "matchbench.trainer package": [[10, "matchbench-trainer-package"]], "matchbench.trainer.base_trainer module": [[10, "module-matchbench.trainer.base_trainer"]], "matchbench.trainer.training_arguments module": [[10, "module-matchbench.trainer.training_arguments"]], "matchbench.utils package": [[11, "matchbench-utils-package"]], "matchbench.utils.column_feature module": [[11, "module-matchbench.utils.column_feature"]], "matchbench.utils.dataset module": [[11, "matchbench-utils-dataset-module"]], "matchbench.utils.dto module": [[11, "module-matchbench.utils.dto"]], "matchbench.utils.emb_loader module": [[11, "module-matchbench.utils.emb_loader"]], "matchbench.utils.eval module": [[11, "module-matchbench.utils.eval"]], "matchbench.utils.file_tools module": [[11, "module-matchbench.utils.file_tools"]], "matchbench.utils.fuse module": [[11, "module-matchbench.utils.fuse"]], "matchbench.utils.load module": [[11, "module-matchbench.utils.load"]], "matchbench.utils.nxmetis module": [[11, "matchbench-utils-nxmetis-module"]], "matchbench.utils.partition module": [[11, "matchbench-utils-partition-module"]], "matchbench.utils.sampler module": [[11, "matchbench-utils-sampler-module"]], "matchbench.utils.text_sim module": [[11, "module-matchbench.utils.text_sim"]], "matchbench.utils.text_utils module": [[11, "module-matchbench.utils.text_utils"]], "matchbench.utils.utils module": [[11, "module-matchbench.utils.utils"]], "Developer Guides": [[12, "developer-guides"]], "Commit Standard Documentation": [[12, "commit-standard-documentation"]], "Brief Introduction": [[12, "brief-introduction"], [12, "id1"]], "Structural Elements": [[12, "structural-elements"]], "Type": [[12, "type"]], "Scope(optional)": [[12, "scope-optional"]], "Breaking Changes of !": [[12, "breaking-changes-of"]], "Description": [[12, "description"]], "Commit Examples": [[12, "commit-examples"]], "Reference": [[12, "reference"], [12, "id2"]], "Pull Comment Standard Documentation": [[12, "pull-comment-standard-documentation"]], "Guidelines for Pull Requests": [[12, "guidelines-for-pull-requests"]], "P&R Comment Standard": [[12, "p-r-comment-standard"]], "P&R Comment Examples": [[12, "p-r-comment-examples"]], "Getting Started": [[13, "getting-started"]], "Install": [[13, "install"]], "QuickStart": [[13, "quickstart"]], "Introduction": [[14, "introduction"]], "User Guides": [[15, "user-guides"]], "Evaluate on your own datasets": [[15, "evaluate-on-your-own-datasets"]], "Build your own model": [[15, "build-your-own-model"]], "matchbench": [[16, "matchbench"]]}, "indexentries": {"matchbench": [[1, "module-matchbench"]], "module": [[1, "module-matchbench"], [2, "module-matchbench.dataset"], [2, "module-matchbench.dataset.load"], [3, "module-matchbench.evaluator"], [3, "module-matchbench.evaluator.base_evaluator"], [3, "module-matchbench.evaluator.metrics"], [4, "module-matchbench.model"], [4, "module-matchbench.model.base_model"], [5, "module-matchbench.model.column_type_annotation"], [5, "module-matchbench.model.column_type_annotation.doduo"], [5, "module-matchbench.model.column_type_annotation.sato"], [5, "module-matchbench.model.column_type_annotation.sherlock"], [6, "module-matchbench.model.entity_alignment"], [6, "module-matchbench.model.entity_alignment.Dual_AMN"], [6, "module-matchbench.model.entity_alignment.bertint"], [6, "module-matchbench.model.entity_alignment.kecg"], [6, "module-matchbench.model.entity_alignment.lightea"], [6, "module-matchbench.model.entity_alignment.rrea"], [6, "module-matchbench.model.entity_alignment.sdea"], [6, "module-matchbench.model.entity_alignment.seu"], [7, "module-matchbench.model.entity_matching.ditto"], [7, "module-matchbench.model.entity_matching.jointbert"], [7, "module-matchbench.model.entity_matching.robem"], [8, "module-matchbench.model.schema_matching"], [8, "module-matchbench.model.schema_matching.embdi"], [9, "module-matchbench.pair_gen"], [9, "module-matchbench.pair_gen.blocker"], [9, "module-matchbench.pair_gen.data_augmenter"], [9, "module-matchbench.pair_gen.neg_sampler"], [10, "module-matchbench.trainer"], [10, "module-matchbench.trainer.base_trainer"], [10, "module-matchbench.trainer.training_arguments"], [11, "module-matchbench.utils"], [11, "module-matchbench.utils.column_feature"], [11, "module-matchbench.utils.dto"], [11, "module-matchbench.utils.emb_loader"], [11, "module-matchbench.utils.eval"], [11, "module-matchbench.utils.file_tools"], [11, "module-matchbench.utils.fuse"], [11, "module-matchbench.utils.load"], [11, "module-matchbench.utils.text_sim"], [11, "module-matchbench.utils.text_utils"], [11, "module-matchbench.utils.utils"]], "list_datasets() (in module matchbench.dataset.load)": [[2, "matchbench.dataset.load.list_datasets"]], "load_datasets() (in module matchbench.dataset.load)": [[2, "matchbench.dataset.load.load_datasets"]], "matchbench.dataset": [[2, "module-matchbench.dataset"]], "matchbench.dataset.load": [[2, "module-matchbench.dataset.load"]], "csls_cal() (in module matchbench.evaluator.metrics)": [[3, "matchbench.evaluator.metrics.CSLS_cal"]], "ctaevaluator (class in matchbench.evaluator.base_evaluator)": [[3, "matchbench.evaluator.base_evaluator.CTAEvaluator"]], "eaevaluator (class in matchbench.evaluator.base_evaluator)": [[3, "matchbench.evaluator.base_evaluator.EAEvaluator"]], "emevaluator (class in matchbench.evaluator.base_evaluator)": [[3, "matchbench.evaluator.base_evaluator.EMEvaluator"]], "evaluator (class in matchbench.evaluator.base_evaluator)": [[3, "matchbench.evaluator.base_evaluator.Evaluator"]], "smevaluator (class in matchbench.evaluator.base_evaluator)": [[3, "matchbench.evaluator.base_evaluator.SMEvaluator"]], "batch_mat_mm() (in module matchbench.evaluator.metrics)": [[3, "matchbench.evaluator.metrics.batch_mat_mm"]], "batch_topk() (in module matchbench.evaluator.metrics)": [[3, "matchbench.evaluator.metrics.batch_topk"]], "cos_sim_mat_generate() (in module matchbench.evaluator.metrics)": [[3, "matchbench.evaluator.metrics.cos_sim_mat_generate"]], "evaluate() (matchbench.evaluator.base_evaluator.ctaevaluator method)": [[3, "matchbench.evaluator.base_evaluator.CTAEvaluator.evaluate"]], "evaluate() (matchbench.evaluator.base_evaluator.eaevaluator method)": [[3, "matchbench.evaluator.base_evaluator.EAEvaluator.evaluate"]], "evaluate() (matchbench.evaluator.base_evaluator.emevaluator method)": [[3, "matchbench.evaluator.base_evaluator.EMEvaluator.evaluate"]], "evaluate() (matchbench.evaluator.base_evaluator.evaluator method)": [[3, "matchbench.evaluator.base_evaluator.Evaluator.evaluate"]], "evaluate() (matchbench.evaluator.base_evaluator.smevaluator method)": [[3, "matchbench.evaluator.base_evaluator.SMEvaluator.evaluate"]], "hits() (in module matchbench.evaluator.metrics)": [[3, "matchbench.evaluator.metrics.hits"]], "matchbench.evaluator": [[3, "module-matchbench.evaluator"]], "matchbench.evaluator.base_evaluator": [[3, "module-matchbench.evaluator.base_evaluator"]], "matchbench.evaluator.metrics": [[3, "module-matchbench.evaluator.metrics"]], "ctamodel (class in matchbench.model.base_model)": [[4, "matchbench.model.base_model.CTAModel"]], "eamodel (class in matchbench.model.base_model)": [[4, "matchbench.model.base_model.EAModel"]], "emmodel (class in matchbench.model.base_model)": [[4, "matchbench.model.base_model.EMModel"]], "generalmodel (class in matchbench.model.base_model)": [[4, "matchbench.model.base_model.GeneralModel"]], "smmodel (class in matchbench.model.base_model)": [[4, "matchbench.model.base_model.SMModel"]], "calculate_loss() (matchbench.model.base_model.ctamodel method)": [[4, "matchbench.model.base_model.CTAModel.calculate_loss"]], "calculate_loss() (matchbench.model.base_model.generalmodel method)": [[4, "matchbench.model.base_model.GeneralModel.calculate_loss"]], "calculate_thresold() (matchbench.model.base_model.emmodel method)": [[4, "matchbench.model.base_model.EMModel.calculate_thresold"]], "compute_metric() (matchbench.model.base_model.ctamodel method)": [[4, "matchbench.model.base_model.CTAModel.compute_metric"]], "compute_metric() (matchbench.model.base_model.eamodel method)": [[4, "matchbench.model.base_model.EAModel.compute_metric"]], "compute_metric() (matchbench.model.base_model.emmodel method)": [[4, "matchbench.model.base_model.EMModel.compute_metric"]], "compute_metric() (matchbench.model.base_model.smmodel method)": [[4, "matchbench.model.base_model.SMModel.compute_metric"]], "compute_metric_stage_2() (matchbench.model.base_model.eamodel method)": [[4, "matchbench.model.base_model.EAModel.compute_metric_stage_2"]], "encode() (matchbench.model.base_model.generalmodel method)": [[4, "matchbench.model.base_model.GeneralModel.encode"]], "f1_score_multilabel() (in module matchbench.model.base_model)": [[4, "matchbench.model.base_model.f1_score_multilabel"]], "forward() (matchbench.model.base_model.generalmodel method)": [[4, "matchbench.model.base_model.GeneralModel.forward"]], "get_emb() (matchbench.model.base_model.eamodel method)": [[4, "matchbench.model.base_model.EAModel.get_emb"]], "get_emb_r() (matchbench.model.base_model.eamodel method)": [[4, "matchbench.model.base_model.EAModel.get_emb_r"]], "get_sentence() (matchbench.model.base_model.emmodel method)": [[4, "matchbench.model.base_model.EMModel.get_sentence"]], "load_source_target() (matchbench.model.base_model.ctamodel method)": [[4, "matchbench.model.base_model.CTAModel.load_source_target"]], "load_source_target() (matchbench.model.base_model.eamodel method)": [[4, "matchbench.model.base_model.EAModel.load_source_target"]], "load_source_target() (matchbench.model.base_model.emmodel method)": [[4, "matchbench.model.base_model.EMModel.load_source_target"]], "match() (matchbench.model.base_model.generalmodel method)": [[4, "matchbench.model.base_model.GeneralModel.match"]], "matchbench.model": [[4, "module-matchbench.model"]], "matchbench.model.base_model": [[4, "module-matchbench.model.base_model"]], "predict() (matchbench.model.base_model.eamodel method)": [[4, "matchbench.model.base_model.EAModel.predict"]], "predict() (matchbench.model.base_model.generalmodel method)": [[4, "matchbench.model.base_model.GeneralModel.predict"]], "predict_stage_2() (matchbench.model.base_model.eamodel method)": [[4, "matchbench.model.base_model.EAModel.predict_stage_2"]], "prepare_dataloader() (matchbench.model.base_model.generalmodel method)": [[4, "matchbench.model.base_model.GeneralModel.prepare_dataloader"]], "run_step() (matchbench.model.base_model.generalmodel method)": [[4, "matchbench.model.base_model.GeneralModel.run_step"]], "serialize() (matchbench.model.base_model.generalmodel method)": [[4, "matchbench.model.base_model.GeneralModel.serialize"]], "training (matchbench.model.base_model.ctamodel attribute)": [[4, "matchbench.model.base_model.CTAModel.training"]], "training (matchbench.model.base_model.eamodel attribute)": [[4, "matchbench.model.base_model.EAModel.training"]], "training (matchbench.model.base_model.emmodel attribute)": [[4, "matchbench.model.base_model.EMModel.training"]], "training (matchbench.model.base_model.generalmodel attribute)": [[4, "matchbench.model.base_model.GeneralModel.training"]], "training (matchbench.model.base_model.smmodel attribute)": [[4, "matchbench.model.base_model.SMModel.training"]], "crf (class in matchbench.model.column_type_annotation.sato)": [[5, "matchbench.model.column_type_annotation.sato.CRF"]], "doduo (class in matchbench.model.column_type_annotation.doduo)": [[5, "matchbench.model.column_type_annotation.doduo.Doduo"]], "sato (class in matchbench.model.column_type_annotation.sato)": [[5, "matchbench.model.column_type_annotation.sato.Sato"]], "sherlock (class in matchbench.model.column_type_annotation.sherlock)": [[5, "matchbench.model.column_type_annotation.sherlock.Sherlock"]], "decode() (matchbench.model.column_type_annotation.sato.crf method)": [[5, "matchbench.model.column_type_annotation.sato.CRF.decode"]], "forward() (matchbench.model.column_type_annotation.doduo.doduo method)": [[5, "matchbench.model.column_type_annotation.doduo.Doduo.forward"]], "forward() (matchbench.model.column_type_annotation.sato.crf method)": [[5, "matchbench.model.column_type_annotation.sato.CRF.forward"]], "forward() (matchbench.model.column_type_annotation.sherlock.sherlock method)": [[5, "matchbench.model.column_type_annotation.sherlock.Sherlock.forward"]], "init_transition() (matchbench.model.column_type_annotation.sato.crf method)": [[5, "matchbench.model.column_type_annotation.sato.CRF.init_transition"]], "label_mapping (matchbench.model.column_type_annotation.doduo.doduo attribute)": [[5, "matchbench.model.column_type_annotation.doduo.Doduo.label_mapping"]], "label_mapping (matchbench.model.column_type_annotation.sato.sato attribute)": [[5, "matchbench.model.column_type_annotation.sato.Sato.label_mapping"]], "label_mapping (matchbench.model.column_type_annotation.sherlock.sherlock attribute)": [[5, "matchbench.model.column_type_annotation.sherlock.Sherlock.label_mapping"]], "matchbench.model.column_type_annotation": [[5, "module-matchbench.model.column_type_annotation"]], "matchbench.model.column_type_annotation.doduo": [[5, "module-matchbench.model.column_type_annotation.doduo"]], "matchbench.model.column_type_annotation.sato": [[5, "module-matchbench.model.column_type_annotation.sato"]], "matchbench.model.column_type_annotation.sherlock": [[5, "module-matchbench.model.column_type_annotation.sherlock"]], "parameters() (matchbench.model.column_type_annotation.sato.sato method)": [[5, "matchbench.model.column_type_annotation.sato.Sato.parameters"]], "predict() (matchbench.model.column_type_annotation.doduo.doduo method)": [[5, "matchbench.model.column_type_annotation.doduo.Doduo.predict"]], "predict() (matchbench.model.column_type_annotation.sato.sato method)": [[5, "matchbench.model.column_type_annotation.sato.Sato.predict"]], "predict() (matchbench.model.column_type_annotation.sherlock.sherlock method)": [[5, "matchbench.model.column_type_annotation.sherlock.Sherlock.predict"]], "prepare_dataloader() (matchbench.model.column_type_annotation.doduo.doduo method)": [[5, "matchbench.model.column_type_annotation.doduo.Doduo.prepare_dataloader"]], "prepare_dataloader() (matchbench.model.column_type_annotation.sato.sato method)": [[5, "matchbench.model.column_type_annotation.sato.Sato.prepare_dataloader"]], "prepare_dataloader() (matchbench.model.column_type_annotation.sherlock.sherlock method)": [[5, "matchbench.model.column_type_annotation.sherlock.Sherlock.prepare_dataloader"]], "reset_parameters() (matchbench.model.column_type_annotation.sato.crf method)": [[5, "matchbench.model.column_type_annotation.sato.CRF.reset_parameters"]], "run_step() (matchbench.model.column_type_annotation.doduo.doduo method)": [[5, "matchbench.model.column_type_annotation.doduo.Doduo.run_step"]], "run_step() (matchbench.model.column_type_annotation.sato.sato method)": [[5, "matchbench.model.column_type_annotation.sato.Sato.run_step"]], "run_step() (matchbench.model.column_type_annotation.sherlock.sherlock method)": [[5, "matchbench.model.column_type_annotation.sherlock.Sherlock.run_step"]], "serialize() (matchbench.model.column_type_annotation.sherlock.sherlock method)": [[5, "matchbench.model.column_type_annotation.sherlock.Sherlock.serialize"]], "tokenize() (matchbench.model.column_type_annotation.doduo.doduo method)": [[5, "matchbench.model.column_type_annotation.doduo.Doduo.tokenize"]], "training (matchbench.model.column_type_annotation.doduo.doduo attribute)": [[5, "matchbench.model.column_type_annotation.doduo.Doduo.training"]], "training (matchbench.model.column_type_annotation.sato.crf attribute)": [[5, "matchbench.model.column_type_annotation.sato.CRF.training"]], "training (matchbench.model.column_type_annotation.sato.sato attribute)": [[5, "matchbench.model.column_type_annotation.sato.Sato.training"]], "training (matchbench.model.column_type_annotation.sherlock.sherlock attribute)": [[5, "matchbench.model.column_type_annotation.sherlock.Sherlock.training"]], "basic_bert_unit_model (class in matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.Basic_Bert_Unit_model"]], "basic_bert_unit_model (class in matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.Basic_Bert_Unit_model"]], "bertdataloader (class in matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.BertDataLoader"]], "bertint (class in matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.BertInt"]], "dbppreprocess() (in module matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.DBPpreprocess"]], "dataset (class in matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.Dataset"]], "dual_amn (class in matchbench.model.entity_alignment.dual_amn)": [[6, "matchbench.model.entity_alignment.Dual_AMN.Dual_AMN"]], "gat (class in matchbench.model.entity_alignment.kecg)": [[6, "matchbench.model.entity_alignment.kecg.GAT"]], "gruattnnet (class in matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.GRUAttnNet"]], "highway (class in matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.Highway"]], "kbstore (class in matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.KBStore"]], "lightea (class in matchbench.model.entity_alignment.lightea)": [[6, "matchbench.model.entity_alignment.lightea.LightEA"]], "mlp (class in matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.MLP"]], "multiheadgraphattention (class in matchbench.model.entity_alignment.kecg)": [[6, "matchbench.model.entity_alignment.kecg.MultiHeadGraphAttention"]], "nr_graphattention (class in matchbench.model.entity_alignment.dual_amn)": [[6, "matchbench.model.entity_alignment.Dual_AMN.NR_GraphAttention"]], "nr_graphattention (class in matchbench.model.entity_alignment.rrea)": [[6, "matchbench.model.entity_alignment.rrea.NR_GraphAttention"]], "oeafiletype (class in matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.OEAFileType"]], "pairwisedataset (class in matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.PairwiseDataset"]], "pairwisedataset (class in matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.PairwiseDataset"]], "rrea (class in matchbench.model.entity_alignment.rrea)": [[6, "matchbench.model.entity_alignment.rrea.RREA"]], "relationdataset (class in matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.RelationDataset"]], "relationmodel (class in matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.RelationModel"]], "relationvaliddataset (class in matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.RelationValidDataset"]], "relationaldataloader (class in matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.RelationalDataloader"]], "sdea (class in matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.SDEA"]], "seu (class in matchbench.model.entity_alignment.seu)": [[6, "matchbench.model.entity_alignment.seu.SEU"]], "specialspmm (class in matchbench.model.entity_alignment.kecg)": [[6, "matchbench.model.entity_alignment.kecg.SpecialSpmm"]], "specialspmmfunction (class in matchbench.model.entity_alignment.kecg)": [[6, "matchbench.model.entity_alignment.kecg.SpecialSpmmFunction"]], "a() (matchbench.model.entity_alignment.sdea.sdea method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.a"]], "add_fact() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.add_fact"]], "add_item() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.add_item"]], "add_to_blocks() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.add_to_blocks"]], "add_tuple() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.add_tuple"]], "add_word_level_blocks() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.add_word_level_blocks"]], "all_embed1s (matchbench.model.entity_alignment.sdea.sdea attribute)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.all_embed1s"]], "all_embed2s (matchbench.model.entity_alignment.sdea.sdea attribute)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.all_embed2s"]], "all_entity_pairs_gene() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.all_entity_pairs_gene"]], "attn_net_with_w() (matchbench.model.entity_alignment.sdea.gruattnnet method)": [[6, "matchbench.model.entity_alignment.sdea.GRUAttnNet.attn_net_with_w"]], "attr (matchbench.model.entity_alignment.sdea.oeafiletype attribute)": [[6, "matchbench.model.entity_alignment.sdea.OEAFileType.attr"]], "attributevalue_emb_gene() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.attributeValue_emb_gene"]], "attributeview_interaction_f_gene() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.attributeView_interaction_F_gene"]], "backward() (matchbench.model.entity_alignment.kecg.specialspmmfunction static method)": [[6, "matchbench.model.entity_alignment.kecg.SpecialSpmmFunction.backward"]], "basic_input_dim (matchbench.model.entity_alignment.sdea.basic_bert_unit_model attribute)": [[6, "matchbench.model.entity_alignment.sdea.Basic_Bert_Unit_model.basic_input_dim"]], "basic_output_dim (matchbench.model.entity_alignment.sdea.basic_bert_unit_model attribute)": [[6, "matchbench.model.entity_alignment.sdea.Basic_Bert_Unit_model.basic_output_dim"]], "batch_dual_aggregation_feature_gene() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.batch_dual_aggregation_feature_gene"]], "batch_sparse_matmul() (matchbench.model.entity_alignment.lightea.lightea method)": [[6, "matchbench.model.entity_alignment.lightea.LightEA.batch_sparse_matmul"]], "bert_model (matchbench.model.entity_alignment.sdea.basic_bert_unit_model attribute)": [[6, "matchbench.model.entity_alignment.sdea.Basic_Bert_Unit_model.bert_model"]], "build_model() (matchbench.model.entity_alignment.sdea.gruattnnet method)": [[6, "matchbench.model.entity_alignment.sdea.GRUAttnNet.build_model"]], "cal_sims() (matchbench.model.entity_alignment.seu.seu method)": [[6, "matchbench.model.entity_alignment.seu.SEU.cal_sims"]], "calculate_func() (matchbench.model.entity_alignment.sdea.kbstore static method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.calculate_func"]], "calculate_loss() (matchbench.model.entity_alignment.bertint.bertint method)": [[6, "matchbench.model.entity_alignment.bertint.BertInt.calculate_loss"]], "calculate_loss() (matchbench.model.entity_alignment.sdea.sdea method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.calculate_loss"]], "candidate_generate() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.candidate_generate"]], "case_study() (matchbench.model.entity_alignment.sdea.relationmodel method)": [[6, "matchbench.model.entity_alignment.sdea.RelationModel.case_study"]], "chuliyixia() (matchbench.model.entity_alignment.bertint.bertint method)": [[6, "matchbench.model.entity_alignment.bertint.BertInt.chuliyixia"]], "class_name_str() (matchbench.model.entity_alignment.sdea.sdea method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.class_name_str"]], "clean_attribute_data() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.clean_attribute_data"]], "combiner (matchbench.model.entity_alignment.sdea.relationmodel attribute)": [[6, "matchbench.model.entity_alignment.sdea.RelationModel.combiner"]], "compress_uri() (in module matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.compress_uri"]], "compute_metric() (matchbench.model.entity_alignment.lightea.lightea method)": [[6, "matchbench.model.entity_alignment.lightea.LightEA.compute_metric"]], "compute_metric() (matchbench.model.entity_alignment.seu.seu method)": [[6, "matchbench.model.entity_alignment.seu.SEU.compute_metric"]], "compute_metric_stage_2() (matchbench.model.entity_alignment.bertint.bertint method)": [[6, "matchbench.model.entity_alignment.bertint.BertInt.compute_metric_stage_2"]], "desornameview_interaction_f_gene() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.desornameView_interaction_F_gene"]], "dropout (matchbench.model.entity_alignment.sdea.basic_bert_unit_model attribute)": [[6, "matchbench.model.entity_alignment.sdea.Basic_Bert_Unit_model.dropout"]], "dump_other_data() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.dump_other_data"]], "encode() (matchbench.model.entity_alignment.dual_amn.dual_amn method)": [[6, "matchbench.model.entity_alignment.Dual_AMN.Dual_AMN.encode"]], "encode() (matchbench.model.entity_alignment.bertint.bertint method)": [[6, "matchbench.model.entity_alignment.bertint.BertInt.encode"]], "encode() (matchbench.model.entity_alignment.rrea.rrea method)": [[6, "matchbench.model.entity_alignment.rrea.RREA.encode"]], "encode() (matchbench.model.entity_alignment.sdea.sdea method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.encode"]], "ent2attributevalues_gene() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.ent2attributeValues_gene"]], "ent_embedding1 (matchbench.model.entity_alignment.sdea.relationmodel attribute)": [[6, "matchbench.model.entity_alignment.sdea.RelationModel.ent_embedding1"]], "ent_embedding2 (matchbench.model.entity_alignment.sdea.relationmodel attribute)": [[6, "matchbench.model.entity_alignment.sdea.RelationModel.ent_embedding2"]], "entity_mode (matchbench.model.entity_alignment.sdea.sdea attribute)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.entity_mode"]], "forward() (matchbench.model.entity_alignment.dual_amn.nr_graphattention method)": [[6, "matchbench.model.entity_alignment.Dual_AMN.NR_GraphAttention.forward"]], "forward() (matchbench.model.entity_alignment.bertint.basic_bert_unit_model method)": [[6, "matchbench.model.entity_alignment.bertint.Basic_Bert_Unit_model.forward"]], "forward() (matchbench.model.entity_alignment.bertint.bertint method)": [[6, "matchbench.model.entity_alignment.bertint.BertInt.forward"]], "forward() (matchbench.model.entity_alignment.bertint.mlp method)": [[6, "matchbench.model.entity_alignment.bertint.MLP.forward"]], "forward() (matchbench.model.entity_alignment.kecg.gat method)": [[6, "matchbench.model.entity_alignment.kecg.GAT.forward"]], "forward() (matchbench.model.entity_alignment.kecg.multiheadgraphattention method)": [[6, "matchbench.model.entity_alignment.kecg.MultiHeadGraphAttention.forward"]], "forward() (matchbench.model.entity_alignment.kecg.specialspmm method)": [[6, "matchbench.model.entity_alignment.kecg.SpecialSpmm.forward"]], "forward() (matchbench.model.entity_alignment.kecg.specialspmmfunction static method)": [[6, "matchbench.model.entity_alignment.kecg.SpecialSpmmFunction.forward"]], "forward() (matchbench.model.entity_alignment.rrea.nr_graphattention method)": [[6, "matchbench.model.entity_alignment.rrea.NR_GraphAttention.forward"]], "forward() (matchbench.model.entity_alignment.sdea.basic_bert_unit_model method)": [[6, "matchbench.model.entity_alignment.sdea.Basic_Bert_Unit_model.forward"]], "forward() (matchbench.model.entity_alignment.sdea.gruattnnet method)": [[6, "matchbench.model.entity_alignment.sdea.GRUAttnNet.forward"]], "forward() (matchbench.model.entity_alignment.sdea.highway method)": [[6, "matchbench.model.entity_alignment.sdea.Highway.forward"]], "forward() (matchbench.model.entity_alignment.sdea.relationmodel method)": [[6, "matchbench.model.entity_alignment.sdea.RelationModel.forward"]], "forward() (matchbench.model.entity_alignment.sdea.sdea method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.forward"]], "get_attributevalue_embedding() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.get_attributeValue_embedding"]], "get_attributeview_interaction_feature() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.get_attributeView_interaction_feature"]], "get_attribute_value_type() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.get_attribute_value_type"]], "get_emb() (matchbench.model.entity_alignment.dual_amn.dual_amn method)": [[6, "matchbench.model.entity_alignment.Dual_AMN.Dual_AMN.get_emb"]], "get_emb() (matchbench.model.entity_alignment.rrea.rrea method)": [[6, "matchbench.model.entity_alignment.rrea.RREA.get_emb"]], "get_emb() (matchbench.model.entity_alignment.sdea.relationmodel method)": [[6, "matchbench.model.entity_alignment.sdea.RelationModel.get_emb"]], "get_ent_embedding() (matchbench.model.entity_alignment.sdea.relationmodel method)": [[6, "matchbench.model.entity_alignment.sdea.RelationModel.get_ent_embedding"]], "get_entity_embedding() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.get_entity_embedding"]], "get_features() (matchbench.model.entity_alignment.lightea.lightea method)": [[6, "matchbench.model.entity_alignment.lightea.LightEA.get_features"]], "get_matrix() (matchbench.model.entity_alignment.sdea.relationdataset static method)": [[6, "matchbench.model.entity_alignment.sdea.RelationDataset.get_matrix"]], "get_neighview_and_desview_interaction_feature() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.get_neighView_and_desView_interaction_feature"]], "get_neighbor_matrix() (matchbench.model.entity_alignment.sdea.relationdataset static method)": [[6, "matchbench.model.entity_alignment.sdea.RelationDataset.get_neighbor_matrix"]], "get_neighbors_batch() (matchbench.model.entity_alignment.sdea.relationmodel static method)": [[6, "matchbench.model.entity_alignment.sdea.RelationModel.get_neighbors_batch"]], "get_or_add_item() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.get_or_add_item"]], "get_property_table_line() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.get_property_table_line"]], "get_rel_embeds() (matchbench.model.entity_alignment.sdea.relationmodel method)": [[6, "matchbench.model.entity_alignment.sdea.RelationModel.get_rel_embeds"]], "get_tensor_data() (matchbench.model.entity_alignment.sdea.sdea static method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.get_tensor_data"]], "get_tokens_of_value() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.get_tokens_of_value"]], "if_neg_sample_2 (matchbench.model.entity_alignment.sdea.sdea attribute)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.if_neg_sample_2"]], "init_linear() (matchbench.model.entity_alignment.sdea.highway method)": [[6, "matchbench.model.entity_alignment.sdea.Highway.init_Linear"]], "kernel_mus() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.kernel_mus"]], "kernel_sigmas() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.kernel_sigmas"]], "line_to_feature() (matchbench.model.entity_alignment.sdea.bertdataloader static method)": [[6, "matchbench.model.entity_alignment.sdea.BertDataLoader.line_to_feature"]], "load() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.load"]], "load_aligned_pair() (in module matchbench.model.entity_alignment.lightea)": [[6, "matchbench.model.entity_alignment.lightea.load_aligned_pair"]], "load_aligned_pair() (in module matchbench.model.entity_alignment.seu)": [[6, "matchbench.model.entity_alignment.seu.load_aligned_pair"]], "load_data() (matchbench.model.entity_alignment.sdea.bertdataloader method)": [[6, "matchbench.model.entity_alignment.sdea.BertDataLoader.load_data"]], "load_entities() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.load_entities"]], "load_facts() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.load_facts"]], "load_freq() (matchbench.model.entity_alignment.sdea.bertdataloader static method)": [[6, "matchbench.model.entity_alignment.sdea.BertDataLoader.load_freq"]], "load_graph() (in module matchbench.model.entity_alignment.lightea)": [[6, "matchbench.model.entity_alignment.lightea.load_graph"]], "load_kb() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.load_kb"]], "load_kb_from_saved() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.load_kb_from_saved"]], "load_links() (matchbench.model.entity_alignment.sdea.sdea method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.load_links"]], "load_links_sep() (matchbench.model.entity_alignment.sdea.sdea method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.load_links_sep"]], "load_list() (in module matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.load_list"]], "load_list_p() (in module matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.load_list_p"]], "load_literals() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.load_literals"]], "load_name_features() (in module matchbench.model.entity_alignment.lightea)": [[6, "matchbench.model.entity_alignment.lightea.load_name_features"]], "load_properties() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.load_properties"]], "load_relations() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.load_relations"]], "load_saved_data() (matchbench.model.entity_alignment.sdea.bertdataloader static method)": [[6, "matchbench.model.entity_alignment.sdea.BertDataLoader.load_saved_data"]], "load_source_target() (matchbench.model.entity_alignment.dual_amn.dual_amn method)": [[6, "matchbench.model.entity_alignment.Dual_AMN.Dual_AMN.load_source_target"]], "load_source_target() (matchbench.model.entity_alignment.bertint.bertint method)": [[6, "matchbench.model.entity_alignment.bertint.BertInt.load_source_target"]], "load_source_target() (matchbench.model.entity_alignment.lightea.lightea method)": [[6, "matchbench.model.entity_alignment.lightea.LightEA.load_source_target"]], "load_source_target() (matchbench.model.entity_alignment.rrea.rrea method)": [[6, "matchbench.model.entity_alignment.rrea.RREA.load_source_target"]], "load_source_target() (matchbench.model.entity_alignment.sdea.sdea method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.load_source_target"]], "load_source_target() (matchbench.model.entity_alignment.seu.seu method)": [[6, "matchbench.model.entity_alignment.seu.SEU.load_source_target"]], "load_triples() (in module matchbench.model.entity_alignment.seu)": [[6, "matchbench.model.entity_alignment.seu.load_triples"]], "matchbench.model.entity_alignment": [[6, "module-matchbench.model.entity_alignment"]], "matchbench.model.entity_alignment.dual_amn": [[6, "module-matchbench.model.entity_alignment.Dual_AMN"]], "matchbench.model.entity_alignment.bertint": [[6, "module-matchbench.model.entity_alignment.bertint"]], "matchbench.model.entity_alignment.kecg": [[6, "module-matchbench.model.entity_alignment.kecg"]], "matchbench.model.entity_alignment.lightea": [[6, "module-matchbench.model.entity_alignment.lightea"]], "matchbench.model.entity_alignment.rrea": [[6, "module-matchbench.model.entity_alignment.rrea"]], "matchbench.model.entity_alignment.sdea": [[6, "module-matchbench.model.entity_alignment.sdea"]], "matchbench.model.entity_alignment.seu": [[6, "module-matchbench.model.entity_alignment.seu"]], "matcher() (matchbench.model.entity_alignment.bertint.bertint method)": [[6, "matchbench.model.entity_alignment.bertint.BertInt.matcher"]], "negative_sample() (matchbench.model.entity_alignment.bertint.bertint method)": [[6, "matchbench.model.entity_alignment.bertint.BertInt.negative_sample"]], "negative_sample() (matchbench.model.entity_alignment.rrea.rrea method)": [[6, "matchbench.model.entity_alignment.rrea.RREA.negative_sample"]], "negative_sample() (matchbench.model.entity_alignment.sdea.sdea method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.negative_sample"]], "neigh_ent_dict_gene() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.neigh_ent_dict_gene"]], "neighborview_interaction_f_gene() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.neighborView_interaction_F_gene"]], "oea_attr_line() (in module matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.oea_attr_line"]], "oea_rel_line() (in module matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.oea_rel_line"]], "oea_truth_line() (matchbench.model.entity_alignment.sdea.sdea method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.oea_truth_line"]], "outputs_csv() (matchbench.model.entity_alignment.sdea.dataset static method)": [[6, "matchbench.model.entity_alignment.sdea.Dataset.outputs_csv"]], "outputs_python() (matchbench.model.entity_alignment.sdea.dataset static method)": [[6, "matchbench.model.entity_alignment.sdea.Dataset.outputs_python"]], "outputs_tab() (matchbench.model.entity_alignment.sdea.dataset static method)": [[6, "matchbench.model.entity_alignment.sdea.Dataset.outputs_tab"]], "padding_to_longest() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.padding_to_longest"]], "plm_path (matchbench.model.entity_alignment.sdea.basic_bert_unit_model attribute)": [[6, "matchbench.model.entity_alignment.sdea.Basic_Bert_Unit_model.plm_path"]], "pos_neg_count() (matchbench.model.entity_alignment.sdea.relationmodel static method)": [[6, "matchbench.model.entity_alignment.sdea.RelationModel.pos_neg_count"]], "predict() (matchbench.model.entity_alignment.dual_amn.dual_amn method)": [[6, "matchbench.model.entity_alignment.Dual_AMN.Dual_AMN.predict"]], "predict() (matchbench.model.entity_alignment.lightea.lightea method)": [[6, "matchbench.model.entity_alignment.lightea.LightEA.predict"]], "predict() (matchbench.model.entity_alignment.rrea.rrea method)": [[6, "matchbench.model.entity_alignment.rrea.RREA.predict"]], "predict() (matchbench.model.entity_alignment.seu.seu method)": [[6, "matchbench.model.entity_alignment.seu.SEU.predict"]], "predict_stage_2() (matchbench.model.entity_alignment.bertint.bertint method)": [[6, "matchbench.model.entity_alignment.bertint.BertInt.predict_stage_2"]], "prepare_dataloader() (matchbench.model.entity_alignment.dual_amn.dual_amn method)": [[6, "matchbench.model.entity_alignment.Dual_AMN.Dual_AMN.prepare_dataloader"]], "prepare_dataloader() (matchbench.model.entity_alignment.bertint.bertint method)": [[6, "matchbench.model.entity_alignment.bertint.BertInt.prepare_dataloader"]], "prepare_dataloader() (matchbench.model.entity_alignment.lightea.lightea method)": [[6, "matchbench.model.entity_alignment.lightea.LightEA.prepare_dataloader"]], "prepare_dataloader() (matchbench.model.entity_alignment.rrea.rrea method)": [[6, "matchbench.model.entity_alignment.rrea.RREA.prepare_dataloader"]], "prepare_dataloader() (matchbench.model.entity_alignment.sdea.sdea method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.prepare_dataloader"]], "prepare_dataloader() (matchbench.model.entity_alignment.seu.seu method)": [[6, "matchbench.model.entity_alignment.seu.SEU.prepare_dataloader"]], "random_projection() (matchbench.model.entity_alignment.lightea.lightea method)": [[6, "matchbench.model.entity_alignment.lightea.LightEA.random_projection"]], "read_att_data() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.read_att_data"]], "read_attribute_datas() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.read_attribute_datas"]], "reduce_tokens() (matchbench.model.entity_alignment.sdea.sdea static method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.reduce_tokens"]], "reduce_tokens_with_freq() (matchbench.model.entity_alignment.sdea.sdea static method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.reduce_tokens_with_freq"]], "rel (matchbench.model.entity_alignment.sdea.oeafiletype attribute)": [[6, "matchbench.model.entity_alignment.sdea.OEAFileType.rel"]], "remove_one_to_n_att_data_by_threshold() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.remove_one_to_N_att_data_by_threshold"]], "rnn (matchbench.model.entity_alignment.sdea.relationmodel attribute)": [[6, "matchbench.model.entity_alignment.sdea.RelationModel.rnn"]], "run() (matchbench.model.entity_alignment.sdea.bertdataloader method)": [[6, "matchbench.model.entity_alignment.sdea.BertDataLoader.run"]], "run_step() (matchbench.model.entity_alignment.dual_amn.dual_amn method)": [[6, "matchbench.model.entity_alignment.Dual_AMN.Dual_AMN.run_step"]], "run_step() (matchbench.model.entity_alignment.bertint.bertint method)": [[6, "matchbench.model.entity_alignment.bertint.BertInt.run_step"]], "run_step() (matchbench.model.entity_alignment.rrea.rrea method)": [[6, "matchbench.model.entity_alignment.rrea.RREA.run_step"]], "run_step() (matchbench.model.entity_alignment.sdea.sdea method)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.run_step"]], "save_base_info() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.save_base_info"]], "save_data() (matchbench.model.entity_alignment.sdea.bertdataloader method)": [[6, "matchbench.model.entity_alignment.sdea.BertDataLoader.save_data"]], "save_datas() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.save_datas"]], "save_dict_p() (in module matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.save_dict_p"]], "save_facts() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.save_facts"]], "save_list() (in module matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.save_list"]], "save_list_p() (in module matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.save_list_p"]], "save_property_table() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.save_property_table"]], "save_seq_form() (matchbench.model.entity_alignment.sdea.kbstore method)": [[6, "matchbench.model.entity_alignment.sdea.KBStore.save_seq_form"]], "save_token_freq() (matchbench.model.entity_alignment.sdea.bertdataloader method)": [[6, "matchbench.model.entity_alignment.sdea.BertDataLoader.save_token_freq"]], "segment_sum() (matchbench.model.entity_alignment.lightea.lightea method)": [[6, "matchbench.model.entity_alignment.lightea.LightEA.segment_sum"]], "serialize() (matchbench.model.entity_alignment.bertint.bertint method)": [[6, "matchbench.model.entity_alignment.bertint.BertInt.serialize"]], "sort_a() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.sort_a"]], "sparse_sinkhorn_sims() (matchbench.model.entity_alignment.lightea.lightea method)": [[6, "matchbench.model.entity_alignment.lightea.LightEA.sparse_sinkhorn_sims"]], "stripsquarebrackets() (in module matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.stripSquareBrackets"]], "strip_square_brackets() (in module matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.strip_square_brackets"]], "test() (in module matchbench.model.entity_alignment.seu)": [[6, "matchbench.model.entity_alignment.seu.test"]], "test() (matchbench.model.entity_alignment.lightea.lightea method)": [[6, "matchbench.model.entity_alignment.lightea.LightEA.test"]], "test_read_emb() (in module matchbench.model.entity_alignment.bertint)": [[6, "matchbench.model.entity_alignment.bertint.test_read_emb"]], "text_to_word_sequence() (in module matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.text_to_word_sequence"]], "train_pair_index_gene() (matchbench.model.entity_alignment.bertint.relationaldataloader method)": [[6, "matchbench.model.entity_alignment.bertint.RelationalDataloader.train_pair_index_gene"]], "training (matchbench.model.entity_alignment.dual_amn.dual_amn attribute)": [[6, "matchbench.model.entity_alignment.Dual_AMN.Dual_AMN.training"]], "training (matchbench.model.entity_alignment.dual_amn.nr_graphattention attribute)": [[6, "matchbench.model.entity_alignment.Dual_AMN.NR_GraphAttention.training"]], "training (matchbench.model.entity_alignment.bertint.basic_bert_unit_model attribute)": [[6, "matchbench.model.entity_alignment.bertint.Basic_Bert_Unit_model.training"]], "training (matchbench.model.entity_alignment.bertint.bertint attribute)": [[6, "matchbench.model.entity_alignment.bertint.BertInt.training"]], "training (matchbench.model.entity_alignment.bertint.mlp attribute)": [[6, "matchbench.model.entity_alignment.bertint.MLP.training"]], "training (matchbench.model.entity_alignment.kecg.gat attribute)": [[6, "matchbench.model.entity_alignment.kecg.GAT.training"]], "training (matchbench.model.entity_alignment.kecg.multiheadgraphattention attribute)": [[6, "matchbench.model.entity_alignment.kecg.MultiHeadGraphAttention.training"]], "training (matchbench.model.entity_alignment.kecg.specialspmm attribute)": [[6, "matchbench.model.entity_alignment.kecg.SpecialSpmm.training"]], "training (matchbench.model.entity_alignment.lightea.lightea attribute)": [[6, "matchbench.model.entity_alignment.lightea.LightEA.training"]], "training (matchbench.model.entity_alignment.rrea.nr_graphattention attribute)": [[6, "matchbench.model.entity_alignment.rrea.NR_GraphAttention.training"]], "training (matchbench.model.entity_alignment.rrea.rrea attribute)": [[6, "matchbench.model.entity_alignment.rrea.RREA.training"]], "training (matchbench.model.entity_alignment.sdea.basic_bert_unit_model attribute)": [[6, "matchbench.model.entity_alignment.sdea.Basic_Bert_Unit_model.training"]], "training (matchbench.model.entity_alignment.sdea.gruattnnet attribute)": [[6, "matchbench.model.entity_alignment.sdea.GRUAttnNet.training"]], "training (matchbench.model.entity_alignment.sdea.highway attribute)": [[6, "matchbench.model.entity_alignment.sdea.Highway.training"]], "training (matchbench.model.entity_alignment.sdea.relationmodel attribute)": [[6, "matchbench.model.entity_alignment.sdea.RelationModel.training"]], "training (matchbench.model.entity_alignment.sdea.sdea attribute)": [[6, "matchbench.model.entity_alignment.sdea.SDEA.training"]], "training (matchbench.model.entity_alignment.seu.seu attribute)": [[6, "matchbench.model.entity_alignment.seu.SEU.training"]], "ttl_full (matchbench.model.entity_alignment.sdea.oeafiletype attribute)": [[6, "matchbench.model.entity_alignment.sdea.OEAFileType.ttl_full"]], "ttl_no_compress_line() (in module matchbench.model.entity_alignment.sdea)": [[6, "matchbench.model.entity_alignment.sdea.ttl_no_compress_line"]], "aslsinglelabel (class in matchbench.model.entity_matching.robem)": [[7, "matchbench.model.entity_matching.robem.ASLSingleLabel"]], "augmode (class in matchbench.model.entity_matching.robem)": [[7, "matchbench.model.entity_matching.robem.AugMode"]], "bcewithlogitsloss() (in module matchbench.model.entity_matching.jointbert)": [[7, "matchbench.model.entity_matching.jointbert.BCEWithLogitsLoss"]], "basicaug (class in matchbench.model.entity_matching.robem)": [[7, "matchbench.model.entity_matching.robem.BasicAug"]], "bertdataloaderjoint (class in matchbench.model.entity_matching.jointbert)": [[7, "matchbench.model.entity_matching.jointbert.BertDataLoaderJoint"]], "dkinjector (class in matchbench.model.entity_matching.ditto)": [[7, "matchbench.model.entity_matching.ditto.DKInjector"]], "datacollatorwithpadding (class in matchbench.model.entity_matching.jointbert)": [[7, "matchbench.model.entity_matching.jointbert.DataCollatorWithPadding"]], "ditto (class in matchbench.model.entity_matching.ditto)": [[7, "matchbench.model.entity_matching.ditto.Ditto"]], "dittodataloader (class in matchbench.model.entity_matching.ditto)": [[7, "matchbench.model.entity_matching.ditto.DittoDataLoader"]], "emdataset (class in matchbench.model.entity_matching.robem)": [[7, "matchbench.model.entity_matching.robem.EmDataset"]], "generaldkinjector (class in matchbench.model.entity_matching.ditto)": [[7, "matchbench.model.entity_matching.ditto.GeneralDKInjector"]], "highway (class in matchbench.model.entity_matching.robem)": [[7, "matchbench.model.entity_matching.robem.Highway"]], "jointbert (class in matchbench.model.entity_matching.jointbert)": [[7, "matchbench.model.entity_matching.jointbert.JointBert"]], "jointbertprep (class in matchbench.model.entity_matching.jointbert)": [[7, "matchbench.model.entity_matching.jointbert.JointBertPrep"]], "productdkinjector (class in matchbench.model.entity_matching.ditto)": [[7, "matchbench.model.entity_matching.ditto.ProductDKInjector"]], "random_del (matchbench.model.entity_matching.robem.augmode attribute)": [[7, "matchbench.model.entity_matching.robem.AugMode.RANDOM_DEL"]], "remove_char_less_than (matchbench.model.entity_matching.robem.augmode attribute)": [[7, "matchbench.model.entity_matching.robem.AugMode.REMOVE_CHAR_LESS_THAN"]], "remove_stop_word (matchbench.model.entity_matching.robem.augmode attribute)": [[7, "matchbench.model.entity_matching.robem.AugMode.REMOVE_STOP_WORD"]], "rob_all (matchbench.model.entity_matching.robem.augmode attribute)": [[7, "matchbench.model.entity_matching.robem.AugMode.ROB_ALL"]], "rob_sfl (matchbench.model.entity_matching.robem.augmode attribute)": [[7, "matchbench.model.entity_matching.robem.AugMode.ROB_SFL"]], "rob_swap (matchbench.model.entity_matching.robem.augmode attribute)": [[7, "matchbench.model.entity_matching.robem.AugMode.ROB_SWAP"]], "robem (class in matchbench.model.entity_matching.robem)": [[7, "matchbench.model.entity_matching.robem.RobEM"]], "robertaclassificationhead (class in matchbench.model.entity_matching.robem)": [[7, "matchbench.model.entity_matching.robem.RobertaClassificationHead"]], "robustaugmenter (class in matchbench.model.entity_matching.robem)": [[7, "matchbench.model.entity_matching.robem.RobustAugmenter"]], "simpleclassifier (class in matchbench.model.entity_matching.robem)": [[7, "matchbench.model.entity_matching.robem.SimpleClassifier"]], "summarizer (class in matchbench.model.entity_matching.ditto)": [[7, "matchbench.model.entity_matching.ditto.Summarizer"]], "summarizer (class in matchbench.model.entity_matching.robem)": [[7, "matchbench.model.entity_matching.robem.Summarizer"]], "assign_clusterid() (in module matchbench.model.entity_matching.jointbert)": [[7, "matchbench.model.entity_matching.jointbert.assign_clusterid"]], "augment() (matchbench.model.entity_matching.robem.basicaug method)": [[7, "matchbench.model.entity_matching.robem.BasicAug.augment"]], "augment_sent() (matchbench.model.entity_matching.robem.robustaugmenter method)": [[7, "matchbench.model.entity_matching.robem.RobustAugmenter.augment_sent"]], "batch_size (matchbench.model.entity_matching.jointbert.bertdataloaderjoint attribute)": [[7, "matchbench.model.entity_matching.jointbert.BertDataLoaderJoint.batch_size"]], "build_index() (matchbench.model.entity_matching.ditto.summarizer method)": [[7, "matchbench.model.entity_matching.ditto.Summarizer.build_index"]], "calc_weights_label() (matchbench.model.entity_matching.jointbert.jointbert method)": [[7, "matchbench.model.entity_matching.jointbert.JointBert.calc_weights_label"]], "calculate_loss() (matchbench.model.entity_matching.ditto.ditto method)": [[7, "matchbench.model.entity_matching.ditto.Ditto.calculate_loss"]], "cluster_id_process() (in module matchbench.model.entity_matching.jointbert)": [[7, "matchbench.model.entity_matching.jointbert.cluster_id_process"]], "config (matchbench.model.entity_matching.ditto.summarizer attribute)": [[7, "matchbench.model.entity_matching.ditto.Summarizer.config"]], "context_forward() (matchbench.model.entity_matching.robem.robem method)": [[7, "matchbench.model.entity_matching.robem.RobEM.context_forward"]], "context_similarity_layers() (matchbench.model.entity_matching.robem.robem method)": [[7, "matchbench.model.entity_matching.robem.RobEM.context_similarity_layers"]], "cosine_similarity() (in module matchbench.model.entity_matching.robem)": [[7, "matchbench.model.entity_matching.robem.cosine_similarity"]], "dataset (matchbench.model.entity_matching.jointbert.bertdataloaderjoint attribute)": [[7, "matchbench.model.entity_matching.jointbert.BertDataLoaderJoint.dataset"]], "drop_last (matchbench.model.entity_matching.jointbert.bertdataloaderjoint attribute)": [[7, "matchbench.model.entity_matching.jointbert.BertDataLoaderJoint.drop_last"]], "forward() (matchbench.model.entity_matching.ditto.ditto method)": [[7, "matchbench.model.entity_matching.ditto.Ditto.forward"]], "forward() (matchbench.model.entity_matching.jointbert.jointbert method)": [[7, "matchbench.model.entity_matching.jointbert.JointBert.forward"]], "forward() (matchbench.model.entity_matching.robem.aslsinglelabel method)": [[7, "matchbench.model.entity_matching.robem.ASLSingleLabel.forward"]], "forward() (matchbench.model.entity_matching.robem.highway method)": [[7, "matchbench.model.entity_matching.robem.Highway.forward"]], "forward() (matchbench.model.entity_matching.robem.robem method)": [[7, "matchbench.model.entity_matching.robem.RobEM.forward"]], "forward() (matchbench.model.entity_matching.robem.robertaclassificationhead method)": [[7, "matchbench.model.entity_matching.robem.RobertaClassificationHead.forward"]], "forward() (matchbench.model.entity_matching.robem.simpleclassifier method)": [[7, "matchbench.model.entity_matching.robem.SimpleClassifier.forward"]], "get_cluster_id() (in module matchbench.model.entity_matching.jointbert)": [[7, "matchbench.model.entity_matching.jointbert.get_cluster_id"]], "get_encoder_deepmatcher() (in module matchbench.model.entity_matching.jointbert)": [[7, "matchbench.model.entity_matching.jointbert.get_encoder_deepmatcher"]], "get_len() (matchbench.model.entity_matching.ditto.summarizer method)": [[7, "matchbench.model.entity_matching.ditto.Summarizer.get_len"]], "get_lm() (matchbench.model.entity_matching.robem.robem method)": [[7, "matchbench.model.entity_matching.robem.RobEM.get_lm"]], "get_lm_class() (matchbench.model.entity_matching.robem.robem method)": [[7, "matchbench.model.entity_matching.robem.RobEM.get_lm_class"]], "get_lm_dim() (matchbench.model.entity_matching.robem.robem method)": [[7, "matchbench.model.entity_matching.robem.RobEM.get_lm_dim"]], "get_tokenizers() (matchbench.model.entity_matching.robem.robem static method)": [[7, "matchbench.model.entity_matching.robem.RobEM.get_tokenizers"]], "has_type_token() (matchbench.model.entity_matching.robem.robem method)": [[7, "matchbench.model.entity_matching.robem.RobEM.has_type_token"]], "initialize() (matchbench.model.entity_matching.ditto.dkinjector method)": [[7, "matchbench.model.entity_matching.ditto.DKInjector.initialize"]], "initialize() (matchbench.model.entity_matching.ditto.generaldkinjector method)": [[7, "matchbench.model.entity_matching.ditto.GeneralDKInjector.initialize"]], "initialize() (matchbench.model.entity_matching.ditto.productdkinjector method)": [[7, "matchbench.model.entity_matching.ditto.ProductDKInjector.initialize"]], "input_serializer() (matchbench.model.entity_matching.robem.emdataset method)": [[7, "matchbench.model.entity_matching.robem.EmDataset.input_serializer"]], "load_source_target() (matchbench.model.entity_matching.ditto.ditto method)": [[7, "matchbench.model.entity_matching.ditto.Ditto.load_source_target"]], "load_source_target() (matchbench.model.entity_matching.robem.robem method)": [[7, "matchbench.model.entity_matching.robem.RobEM.load_source_target"]], "mask_tokens() (matchbench.model.entity_matching.jointbert.datacollatorwithpadding method)": [[7, "matchbench.model.entity_matching.jointbert.DataCollatorWithPadding.mask_tokens"]], "matchbench.model.entity_matching.ditto": [[7, "module-matchbench.model.entity_matching.ditto"]], "matchbench.model.entity_matching.jointbert": [[7, "module-matchbench.model.entity_matching.jointbert"]], "matchbench.model.entity_matching.robem": [[7, "module-matchbench.model.entity_matching.robem"]], "max_length (matchbench.model.entity_matching.jointbert.datacollatorwithpadding attribute)": [[7, "matchbench.model.entity_matching.jointbert.DataCollatorWithPadding.max_length"]], "mlm (matchbench.model.entity_matching.jointbert.datacollatorwithpadding attribute)": [[7, "matchbench.model.entity_matching.jointbert.DataCollatorWithPadding.mlm"]], "mlm_probability (matchbench.model.entity_matching.jointbert.datacollatorwithpadding attribute)": [[7, "matchbench.model.entity_matching.jointbert.DataCollatorWithPadding.mlm_probability"]], "num_workers (matchbench.model.entity_matching.jointbert.bertdataloaderjoint attribute)": [[7, "matchbench.model.entity_matching.jointbert.BertDataLoaderJoint.num_workers"]], "pad() (matchbench.model.entity_matching.ditto.dittodataloader static method)": [[7, "matchbench.model.entity_matching.ditto.DittoDataLoader.pad"]], "pad_to_multiple_of (matchbench.model.entity_matching.jointbert.datacollatorwithpadding attribute)": [[7, "matchbench.model.entity_matching.jointbert.DataCollatorWithPadding.pad_to_multiple_of"]], "padding (matchbench.model.entity_matching.jointbert.datacollatorwithpadding attribute)": [[7, "matchbench.model.entity_matching.jointbert.DataCollatorWithPadding.padding"]], "pair_generator() (matchbench.model.entity_matching.jointbert.jointbert method)": [[7, "matchbench.model.entity_matching.jointbert.JointBert.pair_generator"]], "pin_memory (matchbench.model.entity_matching.jointbert.bertdataloaderjoint attribute)": [[7, "matchbench.model.entity_matching.jointbert.BertDataLoaderJoint.pin_memory"]], "predict() (matchbench.model.entity_matching.ditto.ditto method)": [[7, "matchbench.model.entity_matching.ditto.Ditto.predict"]], "predict() (matchbench.model.entity_matching.jointbert.jointbert method)": [[7, "matchbench.model.entity_matching.jointbert.JointBert.predict"]], "predict() (matchbench.model.entity_matching.robem.robem method)": [[7, "matchbench.model.entity_matching.robem.RobEM.predict"]], "prefetch_factor (matchbench.model.entity_matching.jointbert.bertdataloaderjoint attribute)": [[7, "matchbench.model.entity_matching.jointbert.BertDataLoaderJoint.prefetch_factor"]], "prepare_dataloader() (matchbench.model.entity_matching.ditto.ditto method)": [[7, "matchbench.model.entity_matching.ditto.Ditto.prepare_dataloader"]], "prepare_dataloader() (matchbench.model.entity_matching.jointbert.jointbert method)": [[7, "matchbench.model.entity_matching.jointbert.JointBert.prepare_dataloader"]], "prepare_dataloader() (matchbench.model.entity_matching.robem.robem method)": [[7, "matchbench.model.entity_matching.robem.RobEM.prepare_dataloader"]], "process_to_bert() (in module matchbench.model.entity_matching.jointbert)": [[7, "matchbench.model.entity_matching.jointbert.process_to_bert"]], "reset_weights() (matchbench.model.entity_matching.robem.robem method)": [[7, "matchbench.model.entity_matching.robem.RobEM.reset_weights"]], "resize_embedding() (matchbench.model.entity_matching.robem.robem method)": [[7, "matchbench.model.entity_matching.robem.RobEM.resize_embedding"]], "run_step() (matchbench.model.entity_matching.ditto.ditto method)": [[7, "matchbench.model.entity_matching.ditto.Ditto.run_step"]], "run_step() (matchbench.model.entity_matching.jointbert.jointbert method)": [[7, "matchbench.model.entity_matching.jointbert.JointBert.run_step"]], "run_step() (matchbench.model.entity_matching.robem.robem method)": [[7, "matchbench.model.entity_matching.robem.RobEM.run_step"]], "sampler (matchbench.model.entity_matching.jointbert.bertdataloaderjoint attribute)": [[7, "matchbench.model.entity_matching.jointbert.BertDataLoaderJoint.sampler"]], "set_to_device() (in module matchbench.model.entity_matching.robem)": [[7, "matchbench.model.entity_matching.robem.set_to_device"]], "split_validation() (matchbench.model.entity_matching.jointbert.bertdataloaderjoint method)": [[7, "matchbench.model.entity_matching.jointbert.BertDataLoaderJoint.split_validation"]], "summarize() (matchbench.model.entity_matching.robem.summarizer method)": [[7, "matchbench.model.entity_matching.robem.Summarizer.summarize"]], "timeout (matchbench.model.entity_matching.jointbert.bertdataloaderjoint attribute)": [[7, "matchbench.model.entity_matching.jointbert.BertDataLoaderJoint.timeout"]], "tokenizer (matchbench.model.entity_matching.ditto.summarizer attribute)": [[7, "matchbench.model.entity_matching.ditto.Summarizer.tokenizer"]], "tokenizer (matchbench.model.entity_matching.jointbert.datacollatorwithpadding attribute)": [[7, "matchbench.model.entity_matching.jointbert.DataCollatorWithPadding.tokenizer"]], "training (matchbench.model.entity_matching.ditto.ditto attribute)": [[7, "matchbench.model.entity_matching.ditto.Ditto.training"]], "training (matchbench.model.entity_matching.jointbert.jointbert attribute)": [[7, "matchbench.model.entity_matching.jointbert.JointBert.training"]], "training (matchbench.model.entity_matching.robem.aslsinglelabel attribute)": [[7, "matchbench.model.entity_matching.robem.ASLSingleLabel.training"]], "training (matchbench.model.entity_matching.robem.highway attribute)": [[7, "matchbench.model.entity_matching.robem.Highway.training"]], "training (matchbench.model.entity_matching.robem.robem attribute)": [[7, "matchbench.model.entity_matching.robem.RobEM.training"]], "training (matchbench.model.entity_matching.robem.robertaclassificationhead attribute)": [[7, "matchbench.model.entity_matching.robem.RobertaClassificationHead.training"]], "training (matchbench.model.entity_matching.robem.simpleclassifier attribute)": [[7, "matchbench.model.entity_matching.robem.SimpleClassifier.training"]], "transform() (matchbench.model.entity_matching.ditto.dkinjector method)": [[7, "matchbench.model.entity_matching.ditto.DKInjector.transform"]], "transform() (matchbench.model.entity_matching.ditto.generaldkinjector method)": [[7, "matchbench.model.entity_matching.ditto.GeneralDKInjector.transform"]], "transform() (matchbench.model.entity_matching.ditto.productdkinjector method)": [[7, "matchbench.model.entity_matching.ditto.ProductDKInjector.transform"]], "transform() (matchbench.model.entity_matching.ditto.summarizer method)": [[7, "matchbench.model.entity_matching.ditto.Summarizer.transform"]], "transform_file() (matchbench.model.entity_matching.ditto.dkinjector method)": [[7, "matchbench.model.entity_matching.ditto.DKInjector.transform_file"]], "transform_file() (matchbench.model.entity_matching.ditto.summarizer method)": [[7, "matchbench.model.entity_matching.ditto.Summarizer.transform_file"]], "edge (class in matchbench.model.schema_matching.embdi)": [[8, "matchbench.model.schema_matching.embdi.Edge"]], "edgelist (class in matchbench.model.schema_matching.embdi)": [[8, "matchbench.model.schema_matching.embdi.EdgeList"]], "embdi (class in matchbench.model.schema_matching.embdi)": [[8, "matchbench.model.schema_matching.embdi.Embdi"]], "graph (class in matchbench.model.schema_matching.embdi)": [[8, "matchbench.model.schema_matching.embdi.Graph"]], "node (class in matchbench.model.schema_matching.embdi)": [[8, "matchbench.model.schema_matching.embdi.Node"]], "randomwalk (class in matchbench.model.schema_matching.embdi)": [[8, "matchbench.model.schema_matching.embdi.RandomWalk"]], "add_edge() (matchbench.model.schema_matching.embdi.graph method)": [[8, "matchbench.model.schema_matching.embdi.Graph.add_edge"]], "add_neighbor() (matchbench.model.schema_matching.embdi.node method)": [[8, "matchbench.model.schema_matching.embdi.Node.add_neighbor"]], "add_similar() (matchbench.model.schema_matching.embdi.node method)": [[8, "matchbench.model.schema_matching.embdi.Node.add_similar"]], "add_similarities() (matchbench.model.schema_matching.embdi.graph method)": [[8, "matchbench.model.schema_matching.embdi.Graph.add_similarities"]], "compute_n_sentences() (matchbench.model.schema_matching.embdi.graph method)": [[8, "matchbench.model.schema_matching.embdi.Graph.compute_n_sentences"]], "convert_cell_value() (matchbench.model.schema_matching.embdi.edgelist static method)": [[8, "matchbench.model.schema_matching.embdi.EdgeList.convert_cell_value"]], "convert_to_dict() (matchbench.model.schema_matching.embdi.edgelist method)": [[8, "matchbench.model.schema_matching.embdi.EdgeList.convert_to_dict"]], "convert_to_numeric() (matchbench.model.schema_matching.embdi.edgelist method)": [[8, "matchbench.model.schema_matching.embdi.EdgeList.convert_to_numeric"]], "evaluate_frequencies() (matchbench.model.schema_matching.embdi.edgelist static method)": [[8, "matchbench.model.schema_matching.embdi.EdgeList.evaluate_frequencies"]], "f_no_smoothing() (matchbench.model.schema_matching.embdi.edgelist static method)": [[8, "matchbench.model.schema_matching.embdi.EdgeList.f_no_smoothing"]], "find_intersection_flatten() (matchbench.model.schema_matching.embdi.edgelist static method)": [[8, "matchbench.model.schema_matching.embdi.EdgeList.find_intersection_flatten"]], "get_both_walks() (matchbench.model.schema_matching.embdi.randomwalk method)": [[8, "matchbench.model.schema_matching.embdi.RandomWalk.get_both_walks"]], "get_edgelist() (matchbench.model.schema_matching.embdi.edgelist method)": [[8, "matchbench.model.schema_matching.embdi.EdgeList.get_edgelist"]], "get_graph() (matchbench.model.schema_matching.embdi.graph method)": [[8, "matchbench.model.schema_matching.embdi.Graph.get_graph"]], "get_node_list() (matchbench.model.schema_matching.embdi.graph method)": [[8, "matchbench.model.schema_matching.embdi.Graph.get_node_list"]], "get_prefixes() (matchbench.model.schema_matching.embdi.edgelist method)": [[8, "matchbench.model.schema_matching.embdi.EdgeList.get_prefixes"]], "get_random_neighbor() (matchbench.model.schema_matching.embdi.node method)": [[8, "matchbench.model.schema_matching.embdi.Node.get_random_neighbor"]], "get_random_replacement() (matchbench.model.schema_matching.embdi.node method)": [[8, "matchbench.model.schema_matching.embdi.Node.get_random_replacement"]], "get_random_start() (matchbench.model.schema_matching.embdi.node method)": [[8, "matchbench.model.schema_matching.embdi.Node.get_random_start"]], "get_reversed_walk() (matchbench.model.schema_matching.embdi.randomwalk method)": [[8, "matchbench.model.schema_matching.embdi.RandomWalk.get_reversed_walk"]], "get_walk() (matchbench.model.schema_matching.embdi.randomwalk method)": [[8, "matchbench.model.schema_matching.embdi.RandomWalk.get_walk"]], "inverse_freq() (matchbench.model.schema_matching.embdi.edgelist static method)": [[8, "matchbench.model.schema_matching.embdi.EdgeList.inverse_freq"]], "inverse_smooth() (matchbench.model.schema_matching.embdi.edgelist static method)": [[8, "matchbench.model.schema_matching.embdi.EdgeList.inverse_smooth"]], "load_source_target() (matchbench.model.schema_matching.embdi.embdi method)": [[8, "matchbench.model.schema_matching.embdi.Embdi.load_source_target"]], "log_freq() (matchbench.model.schema_matching.embdi.edgelist static method)": [[8, "matchbench.model.schema_matching.embdi.EdgeList.log_freq"]], "matchbench.model.schema_matching": [[8, "module-matchbench.model.schema_matching"]], "matchbench.model.schema_matching.embdi": [[8, "module-matchbench.model.schema_matching.embdi"]], "normalize_neighbors() (matchbench.model.schema_matching.embdi.node method)": [[8, "matchbench.model.schema_matching.embdi.Node.normalize_neighbors"]], "predict() (matchbench.model.schema_matching.embdi.embdi method)": [[8, "matchbench.model.schema_matching.embdi.Embdi.predict"]], "prepare_split() (matchbench.model.schema_matching.embdi.edgelist static method)": [[8, "matchbench.model.schema_matching.embdi.EdgeList.prepare_split"]], "produce_intersection() (matchbench.model.schema_matching.embdi.graph method)": [[8, "matchbench.model.schema_matching.embdi.Graph.produce_intersection"]], "replace_numeric_value() (matchbench.model.schema_matching.embdi.randomwalk method)": [[8, "matchbench.model.schema_matching.embdi.RandomWalk.replace_numeric_value"]], "replace_string_value() (matchbench.model.schema_matching.embdi.randomwalk method)": [[8, "matchbench.model.schema_matching.embdi.RandomWalk.replace_string_value"]], "set_frequency() (matchbench.model.schema_matching.embdi.node method)": [[8, "matchbench.model.schema_matching.embdi.Node.set_frequency"]], "smooth_exp() (matchbench.model.schema_matching.embdi.edgelist static method)": [[8, "matchbench.model.schema_matching.embdi.EdgeList.smooth_exp"]], "smooth_freq() (matchbench.model.schema_matching.embdi.edgelist method)": [[8, "matchbench.model.schema_matching.embdi.EdgeList.smooth_freq"]], "train() (matchbench.model.schema_matching.embdi.embdi method)": [[8, "matchbench.model.schema_matching.embdi.Embdi.train"]], "training (matchbench.model.schema_matching.embdi.embdi attribute)": [[8, "matchbench.model.schema_matching.embdi.Embdi.training"]], "augmenter (class in matchbench.pair_gen.data_augmenter)": [[9, "matchbench.pair_gen.data_augmenter.Augmenter"]], "negativesampler (class in matchbench.pair_gen.neg_sampler)": [[9, "matchbench.pair_gen.neg_sampler.NegativeSampler"]], "augment() (matchbench.pair_gen.data_augmenter.augmenter method)": [[9, "matchbench.pair_gen.data_augmenter.Augmenter.augment"]], "augment_sent() (matchbench.pair_gen.data_augmenter.augmenter method)": [[9, "matchbench.pair_gen.data_augmenter.Augmenter.augment_sent"]], "generate_train_tups() (matchbench.pair_gen.neg_sampler.negativesampler method)": [[9, "matchbench.pair_gen.neg_sampler.NegativeSampler.generate_train_tups"]], "get_candidate_dict() (matchbench.pair_gen.neg_sampler.negativesampler method)": [[9, "matchbench.pair_gen.neg_sampler.NegativeSampler.get_candidate_dict"]], "get_dataloader() (matchbench.pair_gen.neg_sampler.negativesampler method)": [[9, "matchbench.pair_gen.neg_sampler.NegativeSampler.get_dataloader"]], "matchbench.pair_gen": [[9, "module-matchbench.pair_gen"]], "matchbench.pair_gen.blocker": [[9, "module-matchbench.pair_gen.blocker"]], "matchbench.pair_gen.data_augmenter": [[9, "module-matchbench.pair_gen.data_augmenter"]], "matchbench.pair_gen.neg_sampler": [[9, "module-matchbench.pair_gen.neg_sampler"]], "sample_position() (matchbench.pair_gen.data_augmenter.augmenter method)": [[9, "matchbench.pair_gen.data_augmenter.Augmenter.sample_position"]], "sample_span() (matchbench.pair_gen.data_augmenter.augmenter method)": [[9, "matchbench.pair_gen.data_augmenter.Augmenter.sample_span"]], "embeddingtrainer (class in matchbench.trainer.base_trainer)": [[10, "matchbench.trainer.base_trainer.EmbeddingTrainer"]], "trainer (class in matchbench.trainer.base_trainer)": [[10, "matchbench.trainer.base_trainer.Trainer"]], "trainingargument (class in matchbench.trainer)": [[10, "matchbench.trainer.TrainingArgument"]], "trainingargument (class in matchbench.trainer.training_arguments)": [[10, "matchbench.trainer.training_arguments.TrainingArgument"]], "trainingcontainer (class in matchbench.trainer.base_trainer)": [[10, "matchbench.trainer.base_trainer.TrainingContainer"]], "twostagetrainer (class in matchbench.trainer.base_trainer)": [[10, "matchbench.trainer.base_trainer.TwoStageTrainer"]], "twostagetrainingargument (class in matchbench.trainer.training_arguments)": [[10, "matchbench.trainer.training_arguments.TwoStageTrainingArgument"]], "warmuptrainer (class in matchbench.trainer.base_trainer)": [[10, "matchbench.trainer.base_trainer.WarmupTrainer"]], "aug_in_batch (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.aug_in_batch"]], "aug_in_batch (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.aug_in_batch"]], "auto_mixda() (matchbench.trainer.base_trainer.warmuptrainer method)": [[10, "matchbench.trainer.base_trainer.WarmupTrainer.auto_mixda"]], "clip_grad (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.clip_grad"]], "clip_grad (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.clip_grad"]], "dataset_name (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.dataset_name"]], "dataset_name (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.dataset_name"]], "device (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.device"]], "device (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.device"]], "eval_epoch (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.eval_epoch"]], "eval_epoch (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.eval_epoch"]], "eval_epoch_2 (matchbench.trainer.training_arguments.twostagetrainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TwoStageTrainingArgument.eval_epoch_2"]], "first_stage_model_path (matchbench.trainer.training_arguments.twostagetrainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TwoStageTrainingArgument.first_stage_model_path"]], "fp (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.fp"]], "fp (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.fp"]], "learning_rate_2 (matchbench.trainer.training_arguments.twostagetrainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TwoStageTrainingArgument.learning_rate_2"]], "log_step (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.log_step"]], "log_step (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.log_step"]], "logging_dir (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.logging_dir"]], "lr_scheduler (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.lr_scheduler"]], "lr_scheduler (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.lr_scheduler"]], "matchbench.trainer": [[10, "module-matchbench.trainer"]], "matchbench.trainer.base_trainer": [[10, "module-matchbench.trainer.base_trainer"]], "matchbench.trainer.training_arguments": [[10, "module-matchbench.trainer.training_arguments"]], "mid_file_dir (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.mid_file_dir"]], "mid_file_dir (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.mid_file_dir"]], "num_train_epochs_2 (matchbench.trainer.training_arguments.twostagetrainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TwoStageTrainingArgument.num_train_epochs_2"]], "output_dir (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.output_dir"]], "save (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.save"]], "save (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.save"]], "save_epochs (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.save_epochs"]], "save_epochs (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.save_epochs"]], "sharpen() (matchbench.trainer.base_trainer.warmuptrainer method)": [[10, "matchbench.trainer.base_trainer.WarmupTrainer.sharpen"]], "test_batch_size (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.test_batch_size"]], "test_batch_size (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.test_batch_size"]], "test_batch_size_2 (matchbench.trainer.training_arguments.twostagetrainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TwoStageTrainingArgument.test_batch_size_2"]], "train() (matchbench.trainer.base_trainer.embeddingtrainer method)": [[10, "matchbench.trainer.base_trainer.EmbeddingTrainer.train"]], "train() (matchbench.trainer.base_trainer.trainer method)": [[10, "matchbench.trainer.base_trainer.Trainer.train"]], "train() (matchbench.trainer.base_trainer.trainingcontainer method)": [[10, "matchbench.trainer.base_trainer.TrainingContainer.train"]], "train() (matchbench.trainer.base_trainer.twostagetrainer method)": [[10, "matchbench.trainer.base_trainer.TwoStageTrainer.train"]], "train() (matchbench.trainer.base_trainer.warmuptrainer method)": [[10, "matchbench.trainer.base_trainer.WarmupTrainer.train"]], "train_baseline_epoch() (matchbench.trainer.base_trainer.warmuptrainer method)": [[10, "matchbench.trainer.base_trainer.WarmupTrainer.train_baseline_epoch"]], "train_batch_size (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.train_batch_size"]], "train_batch_size (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.train_batch_size"]], "train_batch_size_2 (matchbench.trainer.training_arguments.twostagetrainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TwoStageTrainingArgument.train_batch_size_2"]], "train_batch_size_after_negsamp (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.train_batch_size_after_negsamp"]], "train_batch_size_after_negsamp (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.train_batch_size_after_negsamp"]], "train_batch_size_after_negsamp_2 (matchbench.trainer.training_arguments.twostagetrainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TwoStageTrainingArgument.train_batch_size_after_negsamp_2"]], "use_dm_optimizer (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.use_dm_optimizer"]], "use_dm_optimizer (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.use_dm_optimizer"]], "use_optimizer_grouped_parameters (matchbench.trainer.trainingargument attribute)": [[10, "matchbench.trainer.TrainingArgument.use_optimizer_grouped_parameters"]], "use_optimizer_grouped_parameters (matchbench.trainer.training_arguments.trainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TrainingArgument.use_optimizer_grouped_parameters"]], "weight_decay_2 (matchbench.trainer.training_arguments.twostagetrainingargument attribute)": [[10, "matchbench.trainer.training_arguments.TwoStageTrainingArgument.weight_decay_2"]], "bert (class in matchbench.utils.emb_loader)": [[11, "matchbench.utils.emb_loader.BERT"]], "embeddingloader (class in matchbench.utils.emb_loader)": [[11, "matchbench.utils.emb_loader.EmbeddingLoader"]], "enttokeninfo (class in matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.EntTokenInfo"]], "tr_models (matchbench.utils.emb_loader.embeddingloader attribute)": [[11, "matchbench.utils.emb_loader.EmbeddingLoader.TR_Models"]], "add_cnt_for() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.add_cnt_for"]], "add_logs() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.add_logs"]], "apply() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.apply"]], "apply_on_sparse() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.apply_on_sparse"]], "approximate_sim() (in module matchbench.utils.text_sim)": [[11, "matchbench.utils.text_sim.approximate_sim"]], "argprint() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.argprint"]], "att_file_make() (in module matchbench.utils.file_tools)": [[11, "matchbench.utils.file_tools.att_file_make"]], "average_embeds_over_words() (in module matchbench.utils.emb_loader)": [[11, "matchbench.utils.emb_loader.average_embeds_over_words"]], "batch_spspmm() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.batch_spspmm"]], "bert_encode() (matchbench.utils.emb_loader.bert method)": [[11, "matchbench.utils.emb_loader.BERT.bert_encode"]], "bi_csls_matrix() (in module matchbench.utils.eval)": [[11, "matchbench.utils.eval.bi_csls_matrix"]], "calc_topk_sim() (in module matchbench.utils.text_sim)": [[11, "matchbench.utils.text_sim.calc_topk_sim"]], "convert_string_lists_to_lists() (in module matchbench.utils.column_feature)": [[11, "matchbench.utils.column_feature.convert_string_lists_to_lists"]], "cosine_distance() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.cosine_distance"]], "cosine_sim() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.cosine_sim"]], "cpm_embedding() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.cpm_embedding"]], "csls_impl() (in module matchbench.utils.eval)": [[11, "matchbench.utils.eval.csls_impl"]], "dense_to_sparse() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.dense_to_sparse"]], "dict_values_to_tensor() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.dict_values_to_tensor"]], "e2w (matchbench.utils.text_utils.enttokeninfo attribute)": [[11, "matchbench.utils.text_utils.EntTokenInfo.e2w"]], "edit_dist_of() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.edit_dist_of"]], "emb (matchbench.utils.text_utils.enttokeninfo attribute)": [[11, "matchbench.utils.text_utils.EntTokenInfo.emb"]], "embed_word2entity() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.embed_word2entity"]], "ent_cnt() (matchbench.utils.text_utils.enttokeninfo method)": [[11, "matchbench.utils.text_utils.EntTokenInfo.ent_cnt"]], "ents (matchbench.utils.text_utils.enttokeninfo attribute)": [[11, "matchbench.utils.text_utils.EntTokenInfo.ents"]], "evaluate_embeds() (in module matchbench.utils.eval)": [[11, "matchbench.utils.eval.evaluate_embeds"]], "evaluate_sim_matrix() (in module matchbench.utils.eval)": [[11, "matchbench.utils.eval.evaluate_sim_matrix"]], "extract_bag_of_characters_features() (in module matchbench.utils.column_feature)": [[11, "matchbench.utils.column_feature.extract_bag_of_characters_features"]], "extract_bag_of_words_features() (in module matchbench.utils.column_feature)": [[11, "matchbench.utils.column_feature.extract_bag_of_words_features"]], "extract_topic_features() (in module matchbench.utils.column_feature)": [[11, "matchbench.utils.column_feature.extract_topic_features"]], "extract_word_embeddings_features() (in module matchbench.utils.column_feature)": [[11, "matchbench.utils.column_feature.extract_word_embeddings_features"]], "faiss_search_impl() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.faiss_search_impl"]], "filter_tokens() (matchbench.utils.text_utils.enttokeninfo method)": [[11, "matchbench.utils.text_utils.EntTokenInfo.filter_tokens"]], "filter_which() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.filter_which"]], "gen_mean() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.gen_mean"]], "get_batch_sim() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.get_batch_sim"]], "get_bert_maxpooling_embs() (in module matchbench.utils.text_sim)": [[11, "matchbench.utils.text_sim.get_bert_maxpooling_embs"]], "get_cos_sim() (in module matchbench.utils.eval)": [[11, "matchbench.utils.eval.get_cos_sim"]], "get_count() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.get_count"]], "get_csls_sim() (in module matchbench.utils.eval)": [[11, "matchbench.utils.eval.get_csls_sim"]], "get_embed_list() (matchbench.utils.emb_loader.embeddingloader method)": [[11, "matchbench.utils.emb_loader.EmbeddingLoader.get_embed_list"]], "get_ent_token_info() (in module matchbench.utils.text_sim)": [[11, "matchbench.utils.text_sim.get_ent_token_info"]], "get_fasttext_aligned_vectors() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.get_fasttext_aligned_vectors"]], "get_hit_k() (in module matchbench.utils.eval)": [[11, "matchbench.utils.eval.get_hit_k"]], "get_iv() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.get_iv"]], "get_mrr() (in module matchbench.utils.eval)": [[11, "matchbench.utils.eval.get_mrr"]], "get_name_feature_map() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.get_name_feature_map"]], "get_punctuations() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.get_punctuations"]], "get_tf_idf() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.get_tf_idf"]], "get_tf_idf() (matchbench.utils.text_utils.enttokeninfo method)": [[11, "matchbench.utils.text_utils.EntTokenInfo.get_tf_idf"]], "get_tokenizer() (matchbench.utils.emb_loader.embeddingloader static method)": [[11, "matchbench.utils.emb_loader.EmbeddingLoader.get_tokenizer"]], "get_topk_sim() (in module matchbench.utils.eval)": [[11, "matchbench.utils.eval.get_topk_sim"]], "global_level_semantic_sim() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.global_level_semantic_sim"]], "has_key() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.has_key"]], "ind2sparse() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.ind2sparse"]], "infer_paragraph_embeddings_features() (in module matchbench.utils.column_feature)": [[11, "matchbench.utils.column_feature.infer_paragraph_embeddings_features"]], "lazy_topk() (in module matchbench.utils.text_sim)": [[11, "matchbench.utils.text_sim.lazy_topk"]], "load() (matchbench.utils.text_utils.enttokeninfo static method)": [[11, "matchbench.utils.text_utils.EntTokenInfo.load"]], "load_model() (in module matchbench.utils.load)": [[11, "matchbench.utils.load.load_model"]], "lst_argmax() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.lst_argmax"]], "make_file() (in module matchbench.utils.dto)": [[11, "matchbench.utils.dto.make_file"]], "makeset() (in module matchbench.utils.text_sim)": [[11, "matchbench.utils.text_sim.makeset"]], "masked_minmax() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.masked_minmax"]], "matchbench.utils": [[11, "module-matchbench.utils"]], "matchbench.utils.column_feature": [[11, "module-matchbench.utils.column_feature"]], "matchbench.utils.dto": [[11, "module-matchbench.utils.dto"]], "matchbench.utils.emb_loader": [[11, "module-matchbench.utils.emb_loader"]], "matchbench.utils.eval": [[11, "module-matchbench.utils.eval"]], "matchbench.utils.file_tools": [[11, "module-matchbench.utils.file_tools"]], "matchbench.utils.fuse": [[11, "module-matchbench.utils.fuse"]], "matchbench.utils.load": [[11, "module-matchbench.utils.load"]], "matchbench.utils.text_sim": [[11, "module-matchbench.utils.text_sim"]], "matchbench.utils.text_utils": [[11, "module-matchbench.utils.text_utils"]], "matchbench.utils.utils": [[11, "module-matchbench.utils.utils"]], "matrix_argmax() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.matrix_argmax"]], "matrix_argmin() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.matrix_argmin"]], "matrix_sinkhorn() (in module matchbench.utils.text_sim)": [[11, "matchbench.utils.text_sim.matrix_sinkhorn"]], "minhash_select_pairs() (in module matchbench.utils.text_sim)": [[11, "matchbench.utils.text_sim.minhash_select_pairs"]], "minmax() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.minmax"]], "minus_mask() (in module matchbench.utils.emb_loader)": [[11, "matchbench.utils.emb_loader.minus_mask"]], "mp2list() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.mp2list"]], "naive_sim_fuser() (in module matchbench.utils.fuse)": [[11, "matchbench.utils.fuse.naive_sim_fuser"]], "norm_embed() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.norm_embed"]], "norm_process() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.norm_process"]], "normalize_vectors() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.normalize_vectors"]], "orthogonal_projection() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.orthogonal_projection"]], "pairwise_edit_distance() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.pairwise_edit_distance"]], "pooled_bert_encode() (matchbench.utils.emb_loader.bert method)": [[11, "matchbench.utils.emb_loader.BERT.pooled_bert_encode"]], "pooled_encode_batched() (matchbench.utils.emb_loader.bert method)": [[11, "matchbench.utils.emb_loader.BERT.pooled_encode_batched"]], "pretrained_models() (matchbench.utils.emb_loader.embeddingloader static method)": [[11, "matchbench.utils.emb_loader.EmbeddingLoader.pretrained_models"]], "print_size() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.print_size"]], "process_col() (in module matchbench.utils.column_feature)": [[11, "matchbench.utils.column_feature.process_col"]], "procrustes() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.procrustes"]], "random_split() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.random_split"]], "rdpm() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.rdpm"]], "readobj() (in module matchbench.utils.dto)": [[11, "matchbench.utils.dto.readobj"]], "rebuild_with_indices() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.rebuild_with_indices"]], "reduce() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.reduce"]], "remain_topk_sim() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.remain_topk_sim"]], "remove_prefix_to_list() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.remove_prefix_to_list"]], "remove_punc() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.remove_punc"]], "resize_sparse() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.resize_sparse"]], "save() (matchbench.utils.text_utils.enttokeninfo method)": [[11, "matchbench.utils.text_utils.EntTokenInfo.save"]], "save_array() (in module matchbench.utils.dto)": [[11, "matchbench.utils.dto.save_array"]], "save_map() (in module matchbench.utils.dto)": [[11, "matchbench.utils.dto.save_map"]], "save_model() (in module matchbench.utils.load)": [[11, "matchbench.utils.load.save_model"]], "save_similarity_matrix() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.save_similarity_matrix"]], "save_vectors() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.save_vectors"]], "saveobj() (in module matchbench.utils.dto)": [[11, "matchbench.utils.dto.saveobj"]], "scatter_op() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.scatter_op"]], "selected_edit_distance() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.selected_edit_distance"]], "seperate_index_type() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.seperate_index_type"]], "set_seed() (in module matchbench.utils.load)": [[11, "matchbench.utils.load.set_seed"]], "set_seed() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.set_seed"]], "sinkhorn_process() (in module matchbench.utils.text_sim)": [[11, "matchbench.utils.text_sim.sinkhorn_process"]], "sparse_acc() (in module matchbench.utils.eval)": [[11, "matchbench.utils.eval.sparse_acc"]], "sparse_argmax() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.sparse_argmax"]], "sparse_argmin() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.sparse_argmin"]], "sparse_dense_element_wise_op() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.sparse_dense_element_wise_op"]], "sparse_max() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.sparse_max"]], "sparse_min() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.sparse_min"]], "sparse_minmax() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.sparse_minmax"]], "sparse_semantic_sim() (in module matchbench.utils.text_sim)": [[11, "matchbench.utils.text_sim.sparse_semantic_sim"]], "sparse_softmax() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.sparse_softmax"]], "sparse_string_sim() (in module matchbench.utils.text_sim)": [[11, "matchbench.utils.text_sim.sparse_string_sim"]], "sparse_top_k() (in module matchbench.utils.eval)": [[11, "matchbench.utils.eval.sparse_top_k"]], "split_sp() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.split_sp"]], "spmm() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.spmm"]], "spmm_ds() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.spmm_ds"]], "spmm_sd() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.spmm_sd"]], "spspmm() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.spspmm"]], "static_high_freq_words() (matchbench.utils.text_utils.enttokeninfo static method)": [[11, "matchbench.utils.text_utils.EntTokenInfo.static_high_freq_words"]], "static_punc_tokens() (matchbench.utils.text_utils.enttokeninfo static method)": [[11, "matchbench.utils.text_utils.EntTokenInfo.static_punc_tokens"]], "subscribe() (in module matchbench.utils.fuse)": [[11, "matchbench.utils.fuse.subscribe"]], "to() (matchbench.utils.emb_loader.bert method)": [[11, "matchbench.utils.emb_loader.BERT.to"]], "to_dense() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.to_dense"]], "to_json() (in module matchbench.utils.dto)": [[11, "matchbench.utils.dto.to_json"]], "to_tensor() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.to_tensor"]], "to_torch_sparse() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.to_torch_sparse"]], "token_level_similarity() (in module matchbench.utils.text_sim)": [[11, "matchbench.utils.text_sim.token_level_similarity"]], "tokenize() (in module matchbench.utils.text_utils)": [[11, "matchbench.utils.text_utils.tokenize"]], "topk2spmat() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.topk2spmat"]], "truncated_mrr() (in module matchbench.utils.eval)": [[11, "matchbench.utils.eval.truncated_mrr"]], "union() (in module matchbench.utils.text_sim)": [[11, "matchbench.utils.text_sim.union"]], "update_time_logs() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.update_time_logs"]], "view2() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.view2"]], "view3() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.view3"]], "view_back() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.view_back"]], "w2e (matchbench.utils.text_utils.enttokeninfo attribute)": [[11, "matchbench.utils.text_utils.EntTokenInfo.w2e"]], "word_cnt() (matchbench.utils.text_utils.enttokeninfo method)": [[11, "matchbench.utils.text_utils.EntTokenInfo.word_cnt"]], "words (matchbench.utils.text_utils.enttokeninfo attribute)": [[11, "matchbench.utils.text_utils.EntTokenInfo.words"]], "z_score() (in module matchbench.utils.utils)": [[11, "matchbench.utils.utils.z_score"]]}})